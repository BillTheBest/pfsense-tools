#!/bin/sh
#
# cvsup_current - part of the pfSense project
#  * Syncs with FreeBSD
#  * Applies pfSense specific patches
#  * Rebuilds pfSense ISO

# Crank up error reporting
#set -x
#set -e

if [ ! -f ./pfsense-build.conf ]; then
	echo "You must first run ./set_version.sh !"
	exit 1
fi

# Set CURRENTDIR
CURRENTDIR=`pwd`

[ -r "${CURRENTDIR}/pfsense_local.sh" ] && . ${CURRENTDIR}/pfsense_local.sh
[ -r "${CURRENTDIR}/builder_common.sh" ] && . ${CURRENTDIR}/builder_common.sh

if [ ! -d $BASE_DIR ]; then
	mkdir -p $BASE_DIR
fi

echo -n ">>> Removing ${BASEDIR} "
# Remove old builder directories used by FreeSBIE 2
if [ -d "$CLONEDIR" ]; then
	rm -rf "${CLONEDIR}/*"
	echo -n "${CLONEDIR}/*"
	rm -rf ${CLONEDIR}/*
fi
echo -n " /tmp/kernels "
if [ -d /tmp/kernels ]; then
	chflags -R noschg /tmp/kernels
	rm -rf /tmp/kernels
fi
echo "...Done!"

SRCDIR=${SRCDIR:-/usr/pfSensesrc/src}

# Make sure source directories are present.
ensure_source_directories_present

# Ensure binaries are present that builder system requires
install_required_builder_system_ports

# Cleanup previous builds (object directory)
pfSense_clean_obj_dir

# Recompile pfPorts
set +e


print_flags

echo
echo "__~> Starting pfSense build.  Sit back and have a six pack of beer (but not cheap beer)..."
echo

cd ${BUILDER_SCRIPTS}

[ -r "${BUILDER_SCRIPTS}/pfsense_local.sh" ] && . ${BUILDER_SCRIPTS}/pfsense_local.sh
echo ">>> Executing ${BUILDER_SCRIPTS}/build_iso.sh..."
(su - root -c cd ${BUILDER_SCRIPTS} && ./build_iso.sh)

