#!/bin/sh
#
# cvsup_current - part of the pfSense project
#  * Syncs with FreeBSD
#  * Applies pfSense specific patches
#  * Rebuilds pfSense ISO
#

CURRENTDIR=`pwd`
[ -r "${CURRENTDIR}/pfsense_local.sh" ] && . ${CURRENTDIR}/pfsense_local.sh

# Remove patches items for if_enc
rm -f /usr/src/sys/conf/options
rm -f /usr/src/sys/conf/files
rm -f /usr/src/sys/net/if_types.h	
rm -f /usr/src/sys/net/if_enc.c
rm -f /usr/src/sys/netipsec/if_enc.c
rm -f /usr/src/sys/netipsec/if_enc.c
rm -f /usr/src/sys/netinet6/esp_input.c
rm -f /usr/src/sys/netinet6/esp_output.c
rm -f /usr/src/sys/netipsec/ipsec_input.c
rm -f /usr/src/sys/netipsec/ipsec_output.c

# Update FreeSBIE2 files from CVS
cd ../../freesbie2 && cvs update && cd $CURRENTDIR

# These are not needed -- they should be set in pfsense_local.sh
# but just in case . . .
PATCHDIR=${PATCHDIR:-/home/pfsense/tools/patches}
SRCDIR=${SRCDIR:-/usr/src}

# Sanity check
if [ ! -d "${PATCHDIR}" ]; then
	echo "PATCHDIR=${PATCHDIR} is not a directory -- Please fix."
	exit 1
fi

# Sanity check
if [ ! -d "${SRCDIR}" ]; then
	echo "SRCDIR=${SRCDIR} is not a directory -- Please fix."
	exit 1
fi

# Add cvsup
if [ ! -f "/usr/local/bin/fastest_cvsup" ]; then
	echo "Cannot find cvsup, pkg_add in progress..."
	/usr/sbin/pkg_add -r fastest_cvsup
fi
# Failed, lets try with passive mode
if [ ! -f "/usr/local/bin/fastest_cvsup" ]; then
	echo "Cannot find cvsup, pkg_add in progress (PASSITVE FTP)..."
	env FTP_PASSIVE_MODE=yes /usr/sbin/pkg_add -r fastest_cvsup
fi

# CVSUP RELENG_6
fastest_cvsup -c tld -q > /var/db/fastest_cvsup
cvsup -h `cat /var/db/fastest_cvsup` ./stable-supfile
fastest_cvsup -c tld -q > /var/db/fastest_cvsup
cvsup -h `cat /var/db/fastest_cvsup` ./ports-supfile

# clog source and usr.sbin/Makefile patch
cd ${SRCDIR}/usr.sbin/
tar xzf ${PATCHDIR}/clog-1.0.1.tar.gz
cd ${SRCDIR}/
patch -p1 < ${PATCHDIR}/clog-makefile.patch

# Traffic shaper fixes for pfctl - loosen anchor checks
cd ${SRCDIR}/contrib/pf/pfctl
patch < ${PATCHDIR}/parse.y

# Making ipfw default to allow all
cd ${SRCDIR}/sys/modules/ipfw
patch < ${PATCHDIR}/ipfw.diff

# Allow ALTQ and VLANS to play nicely
cd ${SRCDIR}/sys/net/
patch < ${PATCHDIR}/altq-vlan.diff

# Eliminate the silly error on embedded ro mounts
cd ${SRCDIR}/sys
patch < ${PATCHDIR}/geom_vfs.c.diff

# Patch EM for fiber / carp
cd ${SRCDIR}/sys/dev/em
patch < ${PATCHDIR}/if_em.c.diff

#rm -rf ${SRCDIR}/src/sys/net/natpt ${SRCDIR}/src/sys/modules/natpt ${SRCDIR}/src/share/man/man4/natpt.4
#cd ${SRCDIR}/
#patch -p1 < ${PATCHDIR}/natpt.diff

# Andrew Thompson's fragmented packet bridge patch
cd ${SRCDIR}/sys/net/
patch < ${PATCHDIR}/if_bridge.c.diff

# Be more like Windows and Linux and send our hostname in the host-name
# option if none is given in the config file.  Also add #ifdefd out
# support for sending a client ID based on our MAC address.
cd ${SRCDIR}/sbin/dhclient
patch < ${PATCHDIR}/dhclient.c.diff

cd ${SRCDIR}/sys/net/
patch < ${PATCHDIR}/if_gre.c.diff

cd ${SRCDIR}/sys/contrib/pf/net
patch < ${PATCHDIR}/pf_ioctl.c.diff

cd ${SRCDIR}/sbin/fdisk
patch < ${PATCHDIR}/fdisk.c.diff

cd ${SRCDIR}/sbin/bsdlabel
patch < ${PATCHDIR}/bsdlabel.c.diff

cd ${SRCDIR}/sys/geom
patch < ${PATCHDIR}/geom_ctl.c.diff

cd ${SRCDIR}/sys
patch < ${PATCHDIR}/if_enc.diff

cd ${SRCDIR}/sys/contrib/pf/net
patch < ${PATCHDIR}/if_pfsync.c.diff

# UMA Fix.  Scheduled for MFC.
cd ${SRCDIR}/sys/vm
patch < ${PATCHDIR}/uma_core.c.diff

# BPF is prone to races, lets fix
cd ${SRCDIR}/sys/
patch < ${PATCHDIR}/bpf_fixes.diff

# Fix obvious error
cd ${SRCDIR}/sys/netinet
patch < ${PATCHDIR}/ip_output.c.diff

# Force crypto if hw device is present
# instead of sometimes falling back to sw
cd ${SRCDIR}/sys/opencrypto
patch < ${PATCHDIR}/crypto.c.diff

# Send zombie procs to /dev/null
cd ${SRCDIR}/sbin/init
patch < ${PATCHDIR}/init.c.diff

# usb4freebsd
# http://www.turbocat.net/~hselasky/usb4bsd/
rm -rf ${SRCDIR}/sys/dev/usb2
mkdir -p ${SRCDIR}/sys/dev/usb2
cd ${SRCDIR}
patch -p2 < ${PATCHDIR}/usb4bsd.diff

echo -n Cleaning up previous build environemnt...Please wait...
cd ${CURRENTDIR}
rm -rf /usr/obj*
echo Done!

echo "Starting pfSense build.  Sit back and have a beer (but not cheap beer)..."

[ -r "${CURRENTDIR}/pfsense_local.sh" ] && . ${CURRENTDIR}/pfsense_local.sh
cd ${CURRENTDIR}
./build_iso.sh


