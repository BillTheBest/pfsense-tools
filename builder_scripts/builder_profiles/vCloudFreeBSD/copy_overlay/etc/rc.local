#!/bin/sh
#
# rc.local - part of vCloudFreeBSD
# Copyright (c) 2010, Scott Ullrich
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
# Redistributions in binary form must reproduce the above copyright notice, 
# this list of conditions and the following disclaimer in the documentation 
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

mount_unionfs() {
	if [ `/sbin/mount | /usr/bin/grep 'union' | /usr/bin/wc -l` -eq 0 ]; then
		/bin/mkdir /tmp/unionfs
		/bin/mkdir /tmp/unionfs/usr
		/bin/mkdir /tmp/unionfs/sbin
		/bin/mkdir /tmp/unionfs/bin
		/bin/mkdir /tmp/unionfs/boot
		echo -n "Mounting unionfs directories:"
		echo -n " usr"
		/sbin/mount_unionfs /tmp/unionfs/usr /usr/
		echo -n " root"
		/sbin/mount_unionfs /tmp/unionfs/bin /bin/		
		echo -n " sbin"
		/sbin/mount_unionfs /tmp/unionfs/sbin /sbin/	
		echo -n " boot"
		/sbin/mount_unionfs /tmp/unionfs/boot /boot/
		echo "... done."
	fi	
}

wait_keypress() {
	# Save original settings.
	old_stty_settings=$(stty -g)
	keypress=""
	COUNTER=9
	stty -icanon min 0 time 10
	while [ "$COUNTER" -gt 0 ]; do
		keypress=`dd bs=1 count=1 2>/dev/null`
		COUNTER=`expr $COUNTER - 1`
		case ${keypress} in
		A)
			COUNTER=0
			;;
		a)
			COUNTER=0
			;;
		esac
	done
	stty "$old_stty_settings"
} 	

first_disk() {
	disk=`/usr/sbin/pc-sysinstall/pc-sysinstall/pc-sysinstall.sh disk-list | /usr/bin/head -n1 | /usr/bin/cut -d':' -f1`
}

disk_size() {
	size=`/usr/sbin/pc-sysinstall/pc-sysinstall/pc-sysinstall.sh disk-info $disk | /usr/bin/grep size | /usr/bin/cut -d':' -f2 | /usr/bin/cut -d'=' -f2`
}

install_to_first_disk() {
	disk_size
	MEM=`/sbin/dmesg -a | /usr/bin/grep MB | /usr/bin/grep real | /usr/bin/awk '{ print $5 }' | /usr/bin/cut -d'(' -f2`
	SWAPSPACE=$(/bin/expr $MEM \* 2)
	DISKSIZE=$(/bin/expr $size \- $SWAPSPACE)
	echo ">>> Setting SWAPSPACE to $SWAPSPACE"
	echo ">>> Setting / SIZE to $DISKSIZE"
	cat <<EOF >/tmp/vCloudFreeBSD.cfg
# Sample configuration file for an installation using pc-sysinstall

installMode=fresh
installInteractive=yes
installType=FreeBSD
installMedium=LiveCD

# Set the disk parameters
disk0=$disk
partition=all
bootManager=bsd
commitDiskPart

# Setup the disk label
# All sizes are expressed in MB
# Avail FS Types, UFS, UFS+S, UFS+J, ZFS, SWAP
# Size 0 means use the rest of the slice size
disk0-part=UFS+S $DISKSIZE /
disk0-part=SWAP $SWAPSPACE none

# Do it now!
commitDiskLabel

# Set if we are installing via optical, USB, or FTP
installType=FreeBSD

packageType=cpdup

# Optional Components
cpdupPaths=boot,COPYRIGHT,bin,dev,etc,home,kernels,libexec,lib,root,sbin,sys,usr,var

EOF
	echo
	echo ">>> One moment please, installing vCloudFreeBSD..."

	`/usr/sbin/pc-sysinstall/pc-sysinstall/pc-sysinstall.sh -c /tmp/vCloudFreeBSD.cfg`
	/sbin/shutdown -r now

}

first_boot() {
	echo
	echo ">>> Welcome to vCloudFreeBSD!"
	mount_unionfs
	first_disk
	echo
	echo "vCloudFreeBSD will automatically install to the"
	echo "disk $disk in 9 seconds.  Press A key to abort!"
	echo
	wait_keypress
	case ${keypress} in
		A)
			echo
			manual_setup
			exit
		;;
		a)
			echo
			manual_setup
			exit
		;;
	esac
	install_to_first_disk
}

second_boot() {
	touch /.setup_complete
	echo puppet_enable=YES >> /etc/rc.conf
	# Self destruct
	rm /etc/rc.local
	echo "Self destructing /etc/rc.local and rebooting with puppet enabled..."
	shutdown -r now
}

manual_setup() {
	echo ">>> vCloudFreeBSD Manual Setup"
	echo "XXX"
}

if [ -f /FIRST_BOOT ]; then
	# Invoke installer
	first_boot
fi

if [ ! -f /FIRST_BOOT ]; then
	if [ ! -f /.setup_complete ]; then
		second_boot
	fi
fi
