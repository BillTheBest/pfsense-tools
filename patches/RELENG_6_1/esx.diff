Index: cam/cam_xpt.c
===================================================================
RCS file: /home/ncvs/src/sys/cam/cam_xpt.c,v
retrieving revision 1.155.2.2
diff -u -r1.155.2.2 cam_xpt.c
--- cam/cam_xpt.c	26 Feb 2006 22:38:39 -0000	1.155.2.2
+++ cam/cam_xpt.c	18 Aug 2006 04:37:17 -0000
@@ -253,6 +253,11 @@
 
 static struct xpt_quirk_entry xpt_quirk_table[] = 
 {
+ 	{
+ 		/* Does not support other than LUN 0 */
+		{ T_DIRECT, SIP_MEDIA_FIXED, "VMware*", "*", "*" },
+ 		CAM_QUIRK_NOLUNS, /*mintags*/0, /*maxtags*/0
+ 	},
 	{
 		/* Reports QUEUE FULL for temporary resource shortages */
 		{ T_DIRECT, SIP_MEDIA_FIXED, quantum, "XP39100*", "*" },
Index: dev/mpt/mpt.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/mpt/mpt.c,v
retrieving revision 1.12.2.1
diff -u -r1.12.2.1 mpt.c
--- dev/mpt/mpt.c	27 Oct 2005 17:48:57 -0000	1.12.2.1
+++ dev/mpt/mpt.c	18 Aug 2006 02:40:57 -0000
@@ -1243,11 +1243,7 @@
 	bzero(&init, sizeof init);
 	init.WhoInit = who;
 	init.Function = MPI_FUNCTION_IOC_INIT;
-	if (mpt->is_fc) {
-		init.MaxDevices = 255;
-	} else {
-		init.MaxDevices = 16;
-	}
+	init.MaxDevices = mpt->mpt_max_devices;
 	init.MaxBuses = 1;
 	init.ReplyFrameSize = MPT_REPLY_SIZE;
 	init.MsgContext = htole32(MPT_REPLY_HANDLER_HANDSHAKE);
@@ -2101,7 +2097,6 @@
 		mpt_diag_outsl(mpt, ext->LoadStartAddress, (uint32_t*)ext,
 			       ext->ImageSize);
 	}
-
 	/* Setup the address to jump to on reset. */
 	mpt_pio_write(mpt, MPT_OFFSET_DIAG_ADDR, fw_hdr->IopResetRegAddr);
 	mpt_pio_write(mpt, MPT_OFFSET_DIAG_DATA, fw_hdr->IopResetVectorValue);
@@ -2115,7 +2110,6 @@
 	data = mpt_pio_read(mpt, MPT_OFFSET_DIAG_DATA) | MPT_DIAG_MEM_CFG_BADFL;
 	mpt_pio_write(mpt, MPT_OFFSET_DIAG_ADDR, MPT_DIAG_MEM_CFG_BASE);
 	mpt_pio_write(mpt, MPT_OFFSET_DIAG_DATA, data);
-
 	/*
 	 * Re-enable the processor and clear the boot halt flag.
 	 */
Index: dev/mpt/mpt.h
===================================================================
RCS file: /home/ncvs/src/sys/dev/mpt/mpt.h,v
retrieving revision 1.6.2.1
diff -u -r1.6.2.1 mpt.h
--- dev/mpt/mpt.h	27 Oct 2005 17:48:57 -0000	1.6.2.1
+++ dev/mpt/mpt.h	18 Aug 2006 02:40:57 -0000
@@ -431,7 +431,10 @@
 #define	mpt_update_params0	cfg.spi._update_params0
 #define	mpt_update_params1	cfg.spi._update_params1
 		struct mpi_fc_cfg {
+			uint32_t _port_speed;
 			uint8_t	nada;
+#define	mpt_fcport_page0	cfg.fc._port_page0
+#define	mpt_fcport_speed	cfg.fc._port_speed
 		} fc;
 	} cfg;
 
Index: dev/mpt/mpt_cam.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/mpt/mpt_cam.c,v
retrieving revision 1.1.2.1
diff -u -r1.1.2.1 mpt_cam.c
--- dev/mpt/mpt_cam.c	27 Oct 2005 17:48:57 -0000	1.1.2.1
+++ dev/mpt/mpt_cam.c	18 Aug 2006 04:48:28 -0000
@@ -1564,7 +1564,40 @@
 		cpi->hba_eng_cnt = 0;
 		cpi->max_lun = 7;
 		cpi->bus_id = cam_sim_bus(sim);
+		cpi->max_target = mpt->mpt_max_devices - 1;
+		/*
+		 * XXX: FC cards report MAX_DEVICES of 512- but we
+		 * XXX: seem to hang when going higher than 255.
+		 */
+		if (cpi->max_target > 255)
+			cpi->max_target = 255;
+		/*
+		 * XXX: VMware ESX reports > 16 devices and then dies
+		 * XXX: when we probe.
+		 */
+		if (cpi->max_target > 15)
+			cpi->max_target = 15;
+ 		cpi->max_lun = 7;
+		cpi->initiator_id = mpt->mpt_ini_id;
+
+ 		cpi->bus_id = cam_sim_bus(sim);
+		/*
+		 * Actual speed for each device varies.
+		 *
+		 * The base speed is the speed of the underlying connection.
+		 * This is strictly determined for SPI (async, narrow). If
+		 * link is up for Fibre Channel, then speed can be gotten
+		 * from that.
+		 */
 		/* XXX Report base speed more accurately for FC/SAS, etc.*/
+		/*
+		 * Actual speed for each device varies.
+		 *
+		 * The base speed is the speed of the underlying connection.
+		 * This is strictly determined for SPI (async, narrow). If
+		 * link is up for Fibre Channel, then speed can be gotten
+		 * from that.
+		 */
 		if (raid_passthru) {
 			cpi->max_target = mpt->ioc_page2->MaxPhysDisks;
 			cpi->hba_misc = PIM_NOBUSRESET;
@@ -1578,17 +1611,17 @@
 				    PI_SDTR_ABLE|PI_TAG_ABLE|PI_WIDE_16;
 			}
 		} else if (mpt->is_fc) {
-			cpi->max_target = 255;
 			cpi->hba_misc = PIM_NOBUSRESET;
-			cpi->initiator_id = cpi->max_target + 1;
-			cpi->base_transfer_speed = 100000;
+			cpi->base_transfer_speed =
+			    mpt->mpt_fcport_speed * 100000;
 			cpi->hba_inquiry = PI_TAG_ABLE;
+			cpi->base_transfer_speed =
+			    mpt->mpt_fcport_speed * 100000;
 		} else {
-			cpi->initiator_id = mpt->mpt_ini_id;
-			cpi->base_transfer_speed = 3300;
 			cpi->hba_inquiry = PI_SDTR_ABLE|PI_TAG_ABLE|PI_WIDE_16;
 			cpi->hba_misc = 0;
 			cpi->max_target = 15;
+			cpi->base_transfer_speed = 3300;
 		}
 
 		strncpy(cpi->sim_vid, "FreeBSD", SIM_IDLEN);
