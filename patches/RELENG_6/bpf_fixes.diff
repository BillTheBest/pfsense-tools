Index: dev/ath/if_ath.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/ath/if_ath.c,v
retrieving revision 1.94.2.16.2.2
diff -u -r1.94.2.16.2.2 if_ath.c
--- dev/ath/if_ath.c	2 May 2006 17:08:34 -0000	1.94.2.16.2.2
+++ dev/ath/if_ath.c	3 Jun 2006 20:19:05 -0000
@@ -2900,7 +2900,7 @@
 			 * pass decrypt+mic errors but others may be
 			 * interesting (e.g. crc).
 			 */
-			if (sc->sc_drvbpf != NULL &&
+			if (bpf_peers_present(sc->sc_drvbpf) &&
 			    (ds->ds_rxstat.rs_status & sc->sc_monpass)) {
 				bus_dmamap_sync(sc->sc_dmat, bf->bf_dmamap,
 				    BUS_DMASYNC_POSTREAD);
@@ -2931,7 +2931,8 @@
 
 		sc->sc_stats.ast_ant_rx[ds->ds_rxstat.rs_antenna]++;
 
-		if (sc->sc_drvbpf != NULL && !ath_rx_tap(sc, m, ds, tsf, nf)) {
+		if (bpf_peers_present(sc->sc_drvbpf) &&
+		    !ath_rx_tap(sc, m, ds, tsf, nf)) {
 			m_freem(m);		/* XXX reclaim */
 			goto rx_next;
 		}
@@ -3629,9 +3630,9 @@
 		ieee80211_dump_pkt(mtod(m0, caddr_t), m0->m_len,
 			sc->sc_hwmap[txrate].ieeerate, -1);
 
-	if (ic->ic_rawbpf)
+	if (bpf_peers_present(ic->ic_rawbpf))
 		bpf_mtap(ic->ic_rawbpf, m0);
-	if (sc->sc_drvbpf) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		u_int64_t tsf = ath_hal_gettsf64(ah);
 
 		sc->sc_tx_th.wt_tsf = htole64(tsf);
Index: dev/awi/awi.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/awi/awi.c,v
retrieving revision 1.37.2.4
diff -u -r1.37.2.4 awi.c
--- dev/awi/awi.c	3 Sep 2005 22:46:42 -0000	1.37.2.4
+++ dev/awi/awi.c	3 Jun 2006 20:19:05 -0000
@@ -796,8 +796,7 @@
 			}
 			IFQ_DEQUEUE(&ifp->if_snd, m0);
 #if NBPFILTER > 0
-			if (ifp->if_bpf)
-				bpf_mtap(ifp->if_bpf, m0);
+			BPF_MTAP(ifp, m0);
 #endif
 			if ((ifp->if_flags & IFF_LINK0) || sc->sc_adhoc_ap)
 				m0 = awi_ether_encap(sc, m0);
@@ -839,7 +838,7 @@
 			ifp->if_opackets++;
 		}
 #if NBPFILTER > 0
-		if (ic->ic_rawbpf)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m0);
 #endif
 		if (dowep) {
Index: dev/gem/if_gem.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/gem/if_gem.c,v
retrieving revision 1.29.2.5
diff -u -r1.29.2.5 if_gem.c
--- dev/gem/if_gem.c	5 Oct 2005 22:08:17 -0000	1.29.2.5
+++ dev/gem/if_gem.c	3 Jun 2006 20:19:06 -0000
@@ -1205,8 +1205,7 @@
 		bus_space_write_4(sc->sc_bustag, sc->sc_h, GEM_TX_KICK,
 			sc->sc_txnext);
 
-		if (ifp->if_bpf != NULL)
-			bpf_mtap(ifp->if_bpf, m0);
+		BPF_MTAP(ifp, m0);
 	} while (1);
 
 	if (txmfail == -1 || sc->sc_txfree == 0) {
Index: dev/ipw/if_ipw.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/ipw/if_ipw.c,v
retrieving revision 1.7.2.4.2.1
diff -u -r1.7.2.4.2.1 if_ipw.c
--- dev/ipw/if_ipw.c	10 Apr 2006 18:29:31 -0000	1.7.2.4.2.1
+++ dev/ipw/if_ipw.c	3 Jun 2006 20:19:06 -0000
@@ -1,4 +1,4 @@
-/*	$FreeBSD: src/sys/dev/ipw/if_ipw.c,v 1.7.2.4.2.1 2006/04/10 18:29:31 mlaier Exp $	*/
+/*	$FreeBSD: /usr/local/www/cvsroot/FreeBSD/src/sys/dev/ipw/if_ipw.c,v 1.21 2006/06/02 23:14:39 sam Exp $	*/
 
 /*-
  * Copyright (c) 2004-2006
@@ -1071,7 +1071,7 @@
 	m->m_pkthdr.rcvif = ifp;
 	m->m_pkthdr.len = m->m_len = le32toh(status->len);
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct ipw_rx_radiotap_header *tap = &sc->sc_rxtap;
 
 		tap->wr_flags = 0;
@@ -1348,7 +1348,7 @@
 		wh = mtod(m0, struct ieee80211_frame *);
 	}
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct ipw_tx_radiotap_header *tap = &sc->sc_txtap;
 
 		tap->wt_flags = 0;
@@ -1516,7 +1516,7 @@
 			continue;
 		}
 
-		if (ic->ic_rawbpf != NULL)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m0);
 
 		if (ipw_tx_start(ifp, m0, ni) != 0) {
Index: dev/iwi/if_iwi.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/iwi/if_iwi.c,v
retrieving revision 1.8.2.6
diff -u -r1.8.2.6 if_iwi.c
--- dev/iwi/if_iwi.c	23 Feb 2006 02:06:46 -0000	1.8.2.6
+++ dev/iwi/if_iwi.c	3 Jun 2006 20:19:06 -0000
@@ -1222,7 +1222,7 @@
 	if (ic->ic_state == IEEE80211_S_SCAN)
 		iwi_fix_channel(ic, m);
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct iwi_rx_radiotap_header *tap = &sc->sc_rxtap;
 
 		tap->wr_flags = 0;
@@ -1555,7 +1555,7 @@
 		wh = mtod(m0, struct ieee80211_frame *);
 	}
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct iwi_tx_radiotap_header *tap = &sc->sc_txtap;
 
 		tap->wt_flags = 0;
@@ -1711,7 +1711,7 @@
 			continue;
 		}
 
-		if (ic->ic_rawbpf != NULL)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m0);
 
 		if (iwi_tx_start(ifp, m0, ni, ac) != 0) {
Index: dev/ral/if_ral.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/ral/Attic/if_ral.c,v
retrieving revision 1.10.2.7
diff -u -r1.10.2.7 if_ral.c
--- dev/ral/if_ral.c	25 Feb 2006 00:50:19 -0000	1.10.2.7
+++ dev/ral/if_ral.c	3 Jun 2006 20:19:06 -0000
@@ -1517,7 +1517,7 @@
 
 	ieee80211_beacon_update(ic, data->ni, &sc->sc_bo, data->m, 1);
 
-	if (ic->ic_rawbpf != NULL)
+	if (bpf_peers_present(ic->ic_rawbpf))
 		bpf_mtap(ic->ic_rawbpf, data->m);
 
 	ral_tx_bcn(sc, data->m, data->ni);
@@ -2109,7 +2109,7 @@
 			ni = (struct ieee80211_node *)m0->m_pkthdr.rcvif;
 			m0->m_pkthdr.rcvif = NULL;
 
-			if (ic->ic_rawbpf != NULL)
+			if (bpf_peers_present(ic->ic_rawbpf))
 				bpf_mtap(ic->ic_rawbpf, m0);
 
 			if (ral_tx_mgt(sc, m0, ni) != 0)
@@ -2145,7 +2145,7 @@
 				continue;
 			}
 
-			if (ic->ic_rawbpf != NULL)
+			if (bpf_peers_present(ic->ic_rawbpf))
 				bpf_mtap(ic->ic_rawbpf, m0);
 
 			if (ral_tx_data(sc, m0, ni) != 0) {
Index: dev/usb/if_ural.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/usb/if_ural.c,v
retrieving revision 1.10.2.7
diff -u -r1.10.2.7 if_ural.c
--- dev/usb/if_ural.c	3 Apr 2006 17:18:22 -0000	1.10.2.7
+++ dev/usb/if_ural.c	3 Jun 2006 20:19:06 -0000
@@ -1,4 +1,4 @@
-/*	$FreeBSD: src/sys/dev/usb/if_ural.c,v 1.10.2.7 2006/04/03 17:18:22 sam Exp $	*/
+/*	$FreeBSD: /usr/local/www/cvsroot/FreeBSD/src/sys/dev/usb/if_ural.c,v 1.40 2006/06/02 23:14:40 sam Exp $	*/
 
 /*-
  * Copyright (c) 2005, 2006
@@ -957,7 +957,7 @@
 	m->m_pkthdr.len = m->m_len = (le32toh(desc->flags) >> 16) & 0xfff;
 	m->m_flags |= M_HASFCS;	/* h/w leaves FCS */
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct ural_rx_radiotap_header *tap = &sc->sc_rxtap;
 
 		tap->wr_flags = IEEE80211_RADIOTAP_F_FCS;   
@@ -1205,7 +1205,7 @@
 			flags |= RAL_TX_TIMESTAMP;
 	}
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct ural_tx_radiotap_header *tap = &sc->sc_txtap;
 
 		tap->wt_flags = 0;
@@ -1294,7 +1294,7 @@
 		*(uint16_t *)wh->i_dur = htole16(dur);
 	}
 
-	if (sc->sc_drvbpf != NULL) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		struct ural_tx_radiotap_header *tap = &sc->sc_txtap;
 
 		tap->wt_flags = 0;
@@ -1356,7 +1356,7 @@
 			ni = (struct ieee80211_node *)m0->m_pkthdr.rcvif;
 			m0->m_pkthdr.rcvif = NULL;
 
-			if (ic->ic_rawbpf != NULL)
+			if (bpf_peers_present(ic->ic_rawbpf))
 				bpf_mtap(ic->ic_rawbpf, m0);
 
 			if (ural_tx_mgt(sc, m0, ni) != 0)
@@ -1392,7 +1392,7 @@
 				continue;
 			}
 
-			if (ic->ic_rawbpf != NULL)
+			if (bpf_peers_present(ic->ic_rawbpf))
 				bpf_mtap(ic->ic_rawbpf, m0);
 
 			if (ural_tx_data(sc, m0, ni) != 0) {
Index: dev/wi/if_wi.c
===================================================================
RCS file: /home/ncvs/src/sys/dev/wi/if_wi.c,v
retrieving revision 1.180.2.7
diff -u -r1.180.2.7 if_wi.c
--- dev/wi/if_wi.c	5 Oct 2005 13:16:29 -0000	1.180.2.7
+++ dev/wi/if_wi.c	3 Jun 2006 20:19:06 -0000
@@ -966,7 +966,7 @@
                         wh = mtod(m0, struct ieee80211_frame *);
 		}
 #if NBPFILTER > 0
-		if (ic->ic_rawbpf)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m0);
 #endif
 		frmhdr.wi_tx_ctl = htole16(WI_ENC_TX_802_11|WI_TXCNTL_TX_EX);
@@ -985,7 +985,7 @@
 			frmhdr.wi_tx_ctl |= htole16(WI_TXCNTL_NOCRYPT);
 		}
 #if NBPFILTER > 0
-		if (sc->sc_drvbpf) {
+		if (bpf_peers_present(ic->ic_rawbpf)) {
 			sc->sc_tx_th.wt_rate =
 				ni->ni_rates.rs_rates[ni->ni_txrate];
 			bpf_mtap2(sc->sc_drvbpf,
@@ -1539,7 +1539,7 @@
 	}
 
 #if NBPFILTER > 0
-	if (sc->sc_drvbpf) {
+	if (bpf_peers_present(sc->sc_drvbpf)) {
 		/* XXX replace divide by table */
 		sc->sc_rx_th.wr_rate = frmhdr.wi_rx_rate / 5;
 		sc->sc_rx_th.wr_antsignal = frmhdr.wi_rx_signal;
Index: net/bpf.c
===================================================================
RCS file: /home/ncvs/src/sys/net/bpf.c,v
retrieving revision 1.153.2.6
diff -u -r1.153.2.6 bpf.c
--- net/bpf.c.orig	Fri Aug 18 15:58:16 2006
+++ net/bpf.c	Thu Sep  7 03:43:49 2006
@@ -299,7 +299,6 @@
 	LIST_INSERT_HEAD(&bp->bif_dlist, d, bd_next);
 
 	bpf_bpfd_cnt++;
-	*bp->bif_driverp = bp;
 	BPFIF_UNLOCK(bp);
 }
 
@@ -325,12 +324,6 @@
 	LIST_REMOVE(d, bd_next);
 
 	bpf_bpfd_cnt--;
-	/*
-	 * Let the driver know that there are no more listeners.
-	 */
-	if (LIST_EMPTY(&bp->bif_dlist))
-		*bp->bif_driverp = NULL;
-
 	d->bd_bif = NULL;
 	BPFD_UNLOCK(d);
 	BPFIF_UNLOCK(bp);
@@ -1080,51 +1073,33 @@
 	struct ifnet *theywant;
 
 	theywant = ifunit(ifr->ifr_name);
-	if (theywant == NULL)
-		return ENXIO;
+	if (theywant == NULL || theywant->if_bpf == NULL)
+		return (ENXIO);
 
+	bp = theywant->if_bpf;
 	/*
-	 * Look through attached interfaces for the named one.
+	 * Allocate the packet buffers if we need to.
+	 * If we're already attached to requested interface,
+	 * just flush the buffer.
 	 */
-	mtx_lock(&bpf_mtx);
-	LIST_FOREACH(bp, &bpf_iflist, bif_next) {
-		struct ifnet *ifp = bp->bif_ifp;
-
-		if (ifp == NULL || ifp != theywant)
-			continue;
-		/* skip additional entry */
-		if (bp->bif_driverp != &ifp->if_bpf)
-			continue;
-
-		mtx_unlock(&bpf_mtx);
-		/*
-		 * We found the requested interface.
-		 * Allocate the packet buffers if we need to.
-		 * If we're already attached to requested interface,
-		 * just flush the buffer.
-		 */
-		if (d->bd_sbuf == NULL) {
-			error = bpf_allocbufs(d);
-			if (error != 0)
-				return (error);
-		}
-		if (bp != d->bd_bif) {
-			if (d->bd_bif)
-				/*
-				 * Detach if attached to something else.
-				 */
-				bpf_detachd(d);
+	if (d->bd_sbuf == NULL) {
+		error = bpf_allocbufs(d);
+		if (error != 0)
+			return (error);
+	}
+	if (bp != d->bd_bif) {
+		if (d->bd_bif)
+			/*
+			 * Detach if attached to something else.
+			 */
+			bpf_detachd(d);
 
-			bpf_attachd(d, bp);
-		}
-		BPFD_LOCK(d);
-		reset_d(d);
-		BPFD_UNLOCK(d);
-		return (0);
+		bpf_attachd(d, bp);
 	}
-	mtx_unlock(&bpf_mtx);
-	/* Not found. */
-	return (ENXIO);
+	BPFD_LOCK(d);
+	reset_d(d);
+	BPFD_UNLOCK(d);
+	return (0);
 }
 
 /*
@@ -1244,13 +1219,6 @@
 	int gottime;
 	struct timeval tv;
 
-	/*
-	 * Lockless read to avoid cost of locking the interface if there are
-	 * no descriptors attached.
-	 */
-	if (LIST_EMPTY(&bp->bif_dlist))
-		return;
-
 	gottime = 0;
 	BPFIF_LOCK(bp);
 	LIST_FOREACH(d, &bp->bif_dlist, bd_next) {
@@ -1315,13 +1283,6 @@
 
 	gottime = 0;
 
-	/*
-	 * Lockless read to avoid cost of locking the interface if there are
-	 * no descriptors attached.
-	 */
-	if (LIST_EMPTY(&bp->bif_dlist))
-		return;
-
 	pktlen = m_length(m, NULL);
 
 	BPFIF_LOCK(bp);
@@ -1367,13 +1328,6 @@
 
 	gottime = 0;
 
-	/*
-	 * Lockless read to avoid cost of locking the interface if there are
-	 * no descriptors attached.
-	 */
-	if (LIST_EMPTY(&bp->bif_dlist))
-		return;
-
 	pktlen = m_length(m, NULL);
 	/*
 	 * Craft on-stack mbuf suitable for passing to bpf_filter.
@@ -1566,16 +1520,14 @@
 		panic("bpfattach");
 
 	LIST_INIT(&bp->bif_dlist);
-	bp->bif_driverp = driverp;
 	bp->bif_ifp = ifp;
 	bp->bif_dlt = dlt;
 	mtx_init(&bp->bif_mtx, "bpf interface lock", NULL, MTX_DEF);
+	*driverp = bp;
 
 	mtx_lock(&bpf_mtx);
 	LIST_INSERT_HEAD(&bpf_iflist, bp, bif_next);
 	mtx_unlock(&bpf_mtx);
-
-	*bp->bif_driverp = NULL;
 
 	/*
 	 * Compute the length of the bpf header.  This is not necessarily
Index: net/bpf.h
===================================================================
RCS file: /home/ncvs/src/sys/net/bpf.h,v
retrieving revision 1.39.2.1
diff -u -r1.39.2.1 bpf.h
--- net/bpf.h	29 Sep 2005 23:48:04 -0000	1.39.2.1
+++ net/bpf.h	3 Jun 2006 21:30:52 -0000
@@ -34,7 +34,7 @@
  *      @(#)bpf.h	8.1 (Berkeley) 6/10/93
  *	@(#)bpf.h	1.34 (LBL)     6/16/96
  *
- * $FreeBSD: src/sys/net/bpf.h,v 1.39.2.1 2005/09/29 23:48:04 csjp Exp $
+ * $FreeBSD: src/sys/net/bpf.h,v 1.44 2006/06/03 18:48:14 csjp Exp $
  */
 
 #ifndef _NET_BPF_H_
@@ -603,7 +603,18 @@
 };
 
 #ifdef _KERNEL
-struct bpf_if;
+/*
+ * Descriptor associated with each attached hardware interface.
+ */
+struct bpf_if {
+	LIST_ENTRY(bpf_if)	bif_next;	/* list of all interfaces */
+	LIST_HEAD(, bpf_d)	bif_dlist;	/* descriptor list */
+	u_int bif_dlt;				/* link layer type */
+	u_int bif_hdrlen;		/* length of header (with padding) */
+	struct ifnet *bif_ifp;		/* corresponding interface */
+	struct mtx	bif_mtx;	/* mutex for interface */
+};
+
 int	 bpf_validate(const struct bpf_insn *, int);
 void	 bpf_tap(struct bpf_if *, u_char *, u_int);
 void	 bpf_mtap(struct bpf_if *, struct mbuf *);
@@ -615,18 +626,27 @@
 void	 bpfilterattach(int);
 u_int	 bpf_filter(const struct bpf_insn *, u_char *, u_int, u_int);
 
+static __inline int
+bpf_peers_present(struct bpf_if *bpf)
+{
+
+	if (bpf && !LIST_EMPTY(&bpf->bif_dlist))
+		return (1);
+	return (0);
+}
+
 #define	BPF_TAP(_ifp,_pkt,_pktlen) do {				\
-	if ((_ifp)->if_bpf)					\
+	if (bpf_peers_present((_ifp)->if_bpf))			\
 		bpf_tap((_ifp)->if_bpf, (_pkt), (_pktlen));	\
 } while (0)
 #define	BPF_MTAP(_ifp,_m) do {					\
-	if ((_ifp)->if_bpf) {					\
+	if (bpf_peers_present((_ifp)->if_bpf)) {		\
 		M_ASSERTVALID(_m);				\
 		bpf_mtap((_ifp)->if_bpf, (_m));			\
 	}							\
 } while (0)
 #define	BPF_MTAP2(_ifp,_data,_dlen,_m) do {			\
-	if ((_ifp)->if_bpf) {					\
+	if (bpf_peers_present((_ifp)->if_bpf)) {		\
 		M_ASSERTVALID(_m);				\
 		bpf_mtap2((_ifp)->if_bpf,(_data),(_dlen),(_m));	\
 	}							\
Index: net/bpfdesc.h
===================================================================
RCS file: /home/ncvs/src/sys/net/bpfdesc.h,v
retrieving revision 1.29.2.2
diff -u -r1.29.2.2 bpfdesc.h
--- net/bpfdesc.h	29 Sep 2005 23:48:04 -0000	1.29.2.2
+++ net/bpfdesc.h	3 Jun 2006 20:19:06 -0000
@@ -118,19 +118,6 @@
 	  (bd)->bd_slen != 0))
 
 /*
- * Descriptor associated with each attached hardware interface.
- */
-struct bpf_if {
-	LIST_ENTRY(bpf_if)	bif_next;	/* list of all interfaces */
-	LIST_HEAD(, bpf_d)	bif_dlist;	/* descriptor list */
-	struct bpf_if **bif_driverp;	/* pointer into softc */
-	u_int bif_dlt;			/* link layer type */
-	u_int bif_hdrlen;		/* length of header (with padding) */
-	struct ifnet *bif_ifp;		/* corresponding interface */
-	struct mtx	bif_mtx;	/* mutex for interface */
-};
-
-/*
  * External representation of the bpf descriptor
  */
 struct xbpf_d {
Index: net/if_disc.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_disc.c,v
retrieving revision 1.48.2.1
diff -u -r1.48.2.1 if_disc.c
--- net/if_disc.c	25 Nov 2005 14:41:31 -0000	1.48.2.1
+++ net/if_disc.c	3 Jun 2006 20:19:06 -0000
@@ -187,7 +187,7 @@
 		dst->sa_family = af;
 	}
 
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		u_int af = dst->sa_family;
 		bpf_mtap2(ifp->if_bpf, &af, sizeof(af), m);
 	}
Index: net/if_faith.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_faith.c,v
retrieving revision 1.36.2.1
diff -u -r1.36.2.1 if_faith.c
--- net/if_faith.c	25 Aug 2005 05:01:19 -0000	1.36.2.1
+++ net/if_faith.c	3 Jun 2006 20:19:06 -0000
@@ -235,7 +235,7 @@
 		dst->sa_family = af;
 	}
 
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		af = dst->sa_family;
 		bpf_mtap2(ifp->if_bpf, &af, sizeof(af), m);
 	}
Index: net/if_fwsubr.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_fwsubr.c,v
retrieving revision 1.12.2.5
diff -u -r1.12.2.5 if_fwsubr.c
--- net/if_fwsubr.c	24 Jan 2006 06:30:51 -0000	1.12.2.5
+++ net/if_fwsubr.c	3 Jun 2006 20:19:06 -0000
@@ -190,7 +190,7 @@
 	/*
 	 * Let BPF tap off a copy before we encapsulate.
 	 */
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		struct fw_bpfhdr h;
 		if (unicast)
 			bcopy(destfw, h.firewire_dhost, 8);
@@ -565,7 +565,7 @@
 	 * Give bpf a chance at the packet. The link-level driver
 	 * should have left us a tag with the EUID of the sender.
 	 */
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		struct fw_bpfhdr h;
 		struct m_tag *mtag;
 
Index: net/if_gif.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_gif.c,v
retrieving revision 1.52.2.4
diff -u -r1.52.2.4 if_gif.c
--- net/if_gif.c	31 Jan 2006 15:56:46 -0000	1.52.2.4
+++ net/if_gif.c	3 Jun 2006 20:19:06 -0000
@@ -441,9 +441,7 @@
 	}
 
 	af = dst->sa_family;
-	if (ifp->if_bpf) {
-		bpf_mtap2(ifp->if_bpf, &af, sizeof(af), m);
-	}
+	BPF_MTAP2(ifp, &af, sizeof(af), m);
 	ifp->if_opackets++;	
 	ifp->if_obytes += m->m_pkthdr.len;
 
@@ -501,7 +499,7 @@
 	mac_create_mbuf_from_ifnet(ifp, m);
 #endif
 
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		u_int32_t af1 = af;
 		bpf_mtap2(ifp->if_bpf, &af1, sizeof(af1), m);
 	}
Index: net/if_gre.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_gre.c,v
retrieving revision 1.32.2.5
diff -u -r1.32.2.5 if_gre.c
--- net/if_gre.c	16 Feb 2006 01:08:40 -0000	1.32.2.5
+++ net/if_gre.c	3 Jun 2006 20:19:06 -0000
@@ -282,7 +282,7 @@
 		dst->sa_family = af;
 	}
 
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		af = dst->sa_family;
 		bpf_mtap2(ifp->if_bpf, &af, sizeof(af), m);
 	}
Index: net/if_loop.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_loop.c,v
retrieving revision 1.106.2.1
diff -u -r1.106.2.1 if_loop.c
--- net/if_loop.c	25 Aug 2005 05:01:20 -0000	1.106.2.1
+++ net/if_loop.c	3 Jun 2006 20:19:06 -0000
@@ -259,7 +259,7 @@
 	m->m_pkthdr.rcvif = ifp;
 
 	/* Let BPF see incoming packet */
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		if (ifp->if_bpf->bif_dlt == DLT_NULL) {
 			u_int32_t af1 = af;	/* XXX beware sizeof(af) != 4 */
 			/*
Index: net/if_sl.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_sl.c,v
retrieving revision 1.129
diff -u -r1.129 if_sl.c
--- net/if_sl.c	10 Jun 2005 16:49:18 -0000	1.129
+++ net/if_sl.c	3 Jun 2006 20:19:06 -0000
@@ -662,7 +662,7 @@
 		 * queueing, and the connection id compression will get
 		 * munged when this happens.
 		 */
-		if (SL2IFP(sc)->if_bpf) {
+		if (bpf_peers_present(SL2IFP(sc)->if_bpf)) {
 			/*
 			 * We need to save the TCP/IP header before it's
 			 * compressed.  To avoid complicated code, we just
@@ -696,7 +696,7 @@
 				*mtod(m, u_char *) |= sl_compress_tcp(m, ip,
 				    &sc->sc_comp, 1);
 		}
-		if (SL2IFP(sc)->if_bpf && sc->bpfbuf) {
+		if (bpf_peers_present(SL2IFP(sc)->if_bpf) && sc->bpfbuf) {
 			/*
 			 * Put the SLIP pseudo-"link header" in place.  The
 			 * compressed header is now at the beginning of the
@@ -922,7 +922,7 @@
 			/* less than min length packet - ignore */
 			goto newpack;
 
-		if (SL2IFP(sc)->if_bpf) {
+		if (bpf_peers_present(SL2IFP(sc)->if_bpf)) {
 			/*
 			 * Save the compressed header, so we
 			 * can tack it on later.  Note that we
@@ -961,7 +961,7 @@
 			} else
 				goto error;
 		}
-		if (SL2IFP(sc)->if_bpf) {
+		if (bpf_peers_present(SL2IFP(sc)->if_bpf)) {
 			/*
 			 * Put the SLIP pseudo-"link header" in place.
 			 * We couldn't do this any earlier since
Index: net/if_stf.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_stf.c,v
retrieving revision 1.50.2.1
diff -u -r1.50.2.1 if_stf.c
--- net/if_stf.c	16 Nov 2005 10:31:21 -0000	1.50.2.1
+++ net/if_stf.c	3 Jun 2006 20:19:06 -0000
@@ -509,7 +509,7 @@
 	}
 	bcopy(ptr, &in4, sizeof(in4));
 
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		/*
 		 * We need to prepend the address family as
 		 * a four byte field.  Cons up a dummy header
@@ -756,7 +756,7 @@
 
 	m->m_pkthdr.rcvif = ifp;
 	
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		/*
 		 * We need to prepend the address family as
 		 * a four byte field.  Cons up a dummy header
Index: net/if_tun.c
===================================================================
RCS file: /home/ncvs/src/sys/net/if_tun.c,v
retrieving revision 1.152.2.2
diff -u -r1.152.2.2 if_tun.c
--- net/if_tun.c	25 Aug 2005 05:01:20 -0000	1.152.2.2
+++ net/if_tun.c	3 Jun 2006 20:19:06 -0000
@@ -509,7 +509,7 @@
 		dst->sa_family = af; 
 	}
 
-	if (ifp->if_bpf) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		af = dst->sa_family;
 		bpf_mtap2(ifp->if_bpf, &af, sizeof(af), m0);
 	}
Index: net80211/ieee80211_input.c
===================================================================
RCS file: /home/ncvs/src/sys/net80211/ieee80211_input.c,v
retrieving revision 1.62.2.12
diff -u -r1.62.2.12 ieee80211_input.c
--- net80211/ieee80211_input.c	14 Mar 2006 23:24:02 -0000	1.62.2.12
+++ net80211/ieee80211_input.c	3 Jun 2006 20:19:06 -0000
@@ -422,7 +422,7 @@
 		}
 
 		/* copy to listener after decrypt */
-		if (ic->ic_rawbpf)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m);
 
 		/*
@@ -536,7 +536,7 @@
 			wh = mtod(m, struct ieee80211_frame *);
 			wh->i_fc[1] &= ~IEEE80211_FC1_WEP;
 		}
-		if (ic->ic_rawbpf)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m);
 		(*ic->ic_recv_mgmt)(ic, m, ni, subtype, rssi, rstamp);
 		m_freem(m);
@@ -563,7 +563,7 @@
 	ifp->if_ierrors++;
 out:
 	if (m != NULL) {
-		if (ic->ic_rawbpf)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m);
 		m_freem(m);
 	}
@@ -719,7 +719,7 @@
 	return;
   out:
 	if (m != NULL) {
-		if (ic->ic_rawbpf)
+		if (bpf_peers_present(ic->ic_rawbpf))
 			bpf_mtap(ic->ic_rawbpf, m);
 		m_freem(m);
 	}
Index: netgraph/ng_iface.c
===================================================================
RCS file: /home/ncvs/src/sys/netgraph/ng_iface.c,v
retrieving revision 1.43.2.2
diff -u -r1.43.2.2 ng_iface.c
--- netgraph/ng_iface.c	9 Nov 2005 11:36:07 -0000	1.43.2.2
+++ netgraph/ng_iface.c	3 Jun 2006 20:19:06 -0000
@@ -418,7 +418,7 @@
 ng_iface_bpftap(struct ifnet *ifp, struct mbuf *m, sa_family_t family)
 {
 	KASSERT(family != AF_UNSPEC, ("%s: family=AF_UNSPEC", __func__));
-	if (ifp->if_bpf != NULL) {
+	if (bpf_peers_present(ifp->if_bpf)) {
 		int32_t family4 = (int32_t)family;
 		bpf_mtap2(ifp->if_bpf, &family4, sizeof(family4), m);
 	}
Index: netinet/ip_carp.c
===================================================================
RCS file: /home/ncvs/src/sys/netinet/ip_carp.c,v
retrieving revision 1.27.2.6
diff -u -r1.27.2.6 ip_carp.c
--- netinet/ip_carp.c	25 Dec 2005 21:59:20 -0000	1.27.2.6
+++ netinet/ip_carp.c	3 Jun 2006 20:19:06 -0000
@@ -641,7 +641,7 @@
 	SC2IFP(sc)->if_ipackets++;
 	SC2IFP(sc)->if_ibytes += m->m_pkthdr.len;
 
-	if (SC2IFP(sc)->if_bpf) {
+	if (bpf_peers_present(SC2IFP(sc)->if_bpf)) {
 		struct ip *ip = mtod(m, struct ip *);
 		uint32_t af1 = af;
 
Index: netinet/ip_gre.c
===================================================================
RCS file: /home/ncvs/src/sys/netinet/ip_gre.c,v
retrieving revision 1.19.2.2
diff -u -r1.19.2.2 ip_gre.c
--- netinet/ip_gre.c	27 Jan 2006 21:50:10 -0000	1.19.2.2
+++ netinet/ip_gre.c	3 Jun 2006 20:19:06 -0000
@@ -207,7 +207,7 @@
 	/* Unlike NetBSD, in FreeBSD m_adj() adjusts m->m_pkthdr.len as well */
 	m_adj(m, hlen);
 
-	if (GRE2IFP(sc)->if_bpf) {
+	if (bpf_peers_present(GRE2IFP(sc)->if_bpf)) {
 		bpf_mtap2(GRE2IFP(sc)->if_bpf, &af, sizeof(af), m);
 	}
 
@@ -289,7 +289,7 @@
 	ip->ip_sum = 0;
 	ip->ip_sum = in_cksum(m, (ip->ip_hl << 2));
 
-	if (GRE2IFP(sc)->if_bpf) {
+	if (bpf_peers_present(GRE2IFP(sc)->if_bpf)) {
 		u_int32_t af = AF_INET;
 		bpf_mtap2(GRE2IFP(sc)->if_bpf, &af, sizeof(af), m);
 	}
