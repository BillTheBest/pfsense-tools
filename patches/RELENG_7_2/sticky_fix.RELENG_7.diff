Index: sys/contrib/pf/net/pf.c
===================================================================
RCS file: /root/repo/testing/repo/src/sys/contrib/pf/net/pf.c,v
retrieving revision 1.3
diff -u -r1.3 pf.c
--- sys/contrib/pf/net/pf.c	14 Jun 2009 15:19:47 -0000	1.3
+++ sys/contrib/pf/net/pf.c	14 Jun 2009 15:22:38 -0000
@@ -1002,25 +1002,12 @@
 {
 	int nloops = 0, s;
 
-	for (;;) {
+	while (!pf_end_threads) {
 		tsleep(pf_purge_thread, PWAIT, "pftm", 1 * hz);
 
 #ifdef __FreeBSD__
 		sx_slock(&pf_consistency_lock);
 		PF_LOCK();
-
-		if (pf_end_threads) {
-			pf_purge_expired_states(pf_status.states);
-			pf_purge_expired_fragments();
-			pf_purge_expired_src_nodes(0);
-			pf_end_threads++;
-
-			sx_sunlock(&pf_consistency_lock);
-			PF_UNLOCK();
-			wakeup(pf_purge_thread);
-			kthread_exit(0);
-		}
-#endif
 		s = splsoftnet();
 
 		/* process a fraction of the state table every second */
@@ -1035,11 +1022,14 @@
 		}
 
 		splx(s);
-#ifdef __FreeBSD__
 		PF_UNLOCK();
 		sx_sunlock(&pf_consistency_lock);
 #endif
 	}
+#ifdef __FreeBSD__
+	wakeup(pf_purge_thread);
+	kthread_exit(0);
+#endif
 }
 
 u_int32_t
@@ -1099,10 +1089,7 @@
 			 if (! locked) {
 #ifdef __FreeBSD__
 				 if (!sx_try_upgrade(&pf_consistency_lock)) {
-					 PF_UNLOCK();
-					 sx_sunlock(&pf_consistency_lock);
-					 sx_xlock(&pf_consistency_lock);
-					 PF_LOCK();
+					continue;
 				 }
 #else
 				 rw_enter_write(&pf_consistency_lock);
@@ -1255,10 +1242,7 @@
 			if (! locked) {
 #ifdef __FreeBSD__
 				 if (!sx_try_upgrade(&pf_consistency_lock)) {
-					 PF_UNLOCK();
-					 sx_sunlock(&pf_consistency_lock);
-					 sx_xlock(&pf_consistency_lock);
-					 PF_LOCK();
+					continue;
 				 }
 #else
 				rw_enter_write(&pf_consistency_lock);
@@ -1272,10 +1256,7 @@
 			if (! locked) {
 #ifdef __FreeBSD__
 				 if (!sx_try_upgrade(&pf_consistency_lock)) {
-					 PF_UNLOCK();
-					 sx_sunlock(&pf_consistency_lock);
-					 sx_xlock(&pf_consistency_lock);
-					 PF_LOCK();
+					continue;
 				 }
 #else
 				rw_enter_write(&pf_consistency_lock);
