Index: sys/conf/files
===================================================================
RCS file: /home/ermal/cvsrepopftag/src/sys/conf/files,v
retrieving revision 1.2
diff -u -r1.2 files
--- sys/conf/files	5 May 2009 18:07:55 -0000	1.2
+++ sys/conf/files	14 May 2009 17:58:09 -0000
@@ -2581,6 +2581,8 @@
 security/mac_seeotheruids/mac_seeotheruids.c optional mac_seeotheruids
 security/mac_stub/mac_stub.c	optional mac_stub
 security/mac_test/mac_test.c	optional mac_test
+sys/mbuf.h			standard 	\
+	compile-with "${NORMAL_C} -I$S/contrib/pf"
 ufs/ffs/ffs_alloc.c		optional ffs
 ufs/ffs/ffs_balloc.c		optional ffs
 ufs/ffs/ffs_inode.c		optional ffs
Index: sys/contrib/pf/net/pf_mtag.h
===================================================================
RCS file: /home/ermal/cvsrepopftag/src/sys/contrib/pf/net/pf_mtag.h,v
retrieving revision 1.2
diff -u -r1.2 pf_mtag.h
--- sys/contrib/pf/net/pf_mtag.h	5 May 2009 18:08:03 -0000	1.2
+++ sys/contrib/pf/net/pf_mtag.h	5 May 2009 20:40:05 -0000
@@ -51,6 +51,9 @@
 	sa_family_t	 af;		/* for ECN */
 };
 
+#define pf_get_mtag(m)	&(m)->m_pkthdr.pftag
+#define pf_find_mtag(m)	&(m)->m_pkthdr.pftag
+#if 0
 static __inline struct pf_mtag *pf_find_mtag(struct mbuf *);
 static __inline struct pf_mtag *pf_get_mtag(struct mbuf *);
 
@@ -81,5 +84,6 @@
 
 	return ((struct pf_mtag *)(mtag + 1));
 }
+#endif
 #endif /* _KERNEL */
 #endif /* _NET_PF_MTAG_H_ */
Index: sys/sys/mbuf.h
===================================================================
RCS file: /home/ermal/cvsrepopftag/src/sys/sys/mbuf.h,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 mbuf.h
--- sys/sys/mbuf.h	5 May 2009 18:03:30 -0000	1.1.1.1
+++ sys/sys/mbuf.h	14 May 2009 17:58:28 -0000
@@ -44,6 +44,9 @@
 #endif
 #endif
 
+#include <netinet/in.h>
+#include <net/pf_mtag.h>
+
 /*
  * Mbufs are of a single size, MSIZE (sys/param.h), which includes overhead.
  * An mbuf may add a single "mbuf cluster" of size MCLBYTES (also in
@@ -118,6 +121,7 @@
 	uint32_t	 flowid;	/* packet's 4-tuple system 
 					 * flow identifier
 					 */
+	struct pf_mtag	 pftag;		/* pf tag optimization */
 	/* variables for hardware checksum */
 	int		 csum_flags;	/* flags regarding checksum */
 	int		 csum_data;	/* data field used by csum routines */
