Index: ip_dummynet.c
===================================================================
RCS file: /home/ncvs/src/sys/netinet/ip_dummynet.c,v
retrieving revision 1.93.2.5
diff -u -r1.93.2.5 ip_dummynet.c
--- ip_dummynet.c	29 Jul 2006 08:24:12 -0000	1.93.2.5
+++ ip_dummynet.c	24 Mar 2007 21:00:22 -0000
@@ -774,6 +774,7 @@
 			ip = mtod(m, struct ip *);
 			ip->ip_len = htons(ip->ip_len);
 			ip->ip_off = htons(ip->ip_off);
+			m->m_flags |= M_IPIN_SKIPPFIL;
 			ip_input(m);
 			break;
 #ifdef INET6
Index: ip_input.c
===================================================================
RCS file: /home/ncvs/src/sys/netinet/ip_input.c,v
retrieving revision 1.301.2.10
diff -u -r1.301.2.10 ip_input.c
--- ip_input.c	4 Sep 2006 10:39:47 -0000	1.301.2.10
+++ ip_input.c	24 Mar 2007 21:00:22 -0000
@@ -389,18 +389,22 @@
 		}
 	}
 
-	if (m->m_pkthdr.csum_flags & CSUM_IP_CHECKED) {
-		sum = !(m->m_pkthdr.csum_flags & CSUM_IP_VALID);
-	} else {
-		if (hlen == sizeof(struct ip)) {
-			sum = in_cksum_hdr(ip);
+	/* skip checksum checks if we came from dummynet, since we'll already
+	   have been here in that case */
+	if (!(m->m_flags & M_IPIN_SKIPPFIL)) {
+		if (m->m_pkthdr.csum_flags & CSUM_IP_CHECKED) {
+			sum = !(m->m_pkthdr.csum_flags & CSUM_IP_VALID);
 		} else {
-			sum = in_cksum(m, hlen);
+			if (hlen == sizeof(struct ip)) {
+				sum = in_cksum_hdr(ip);
+			} else {
+				sum = in_cksum(m, hlen);
+			}
+		}
+		if (sum) {
+			ipstat.ips_badsum++;
+			goto bad;
 		}
-	}
-	if (sum) {
-		ipstat.ips_badsum++;
-		goto bad;
 	}
 
 #ifdef ALTQ
@@ -463,6 +467,20 @@
 	/* Jump over all PFIL processing if hooks are not active. */
 	if (inet_pfil_hook.ph_busy_count == -1)
 		goto passin;
+	if (m->m_flags & M_IPIN_SKIPPFIL) {
+		/* m0n0wall: packet has already been through dummynet, and therefore
+		   also through ipnat (reversed processing order in m0n0wall);
+		   we skip the pfil hooks to avoid ipnat being called again on
+		   this packet (this implicitly assumes that one_pass=1).
+		   However, we need to remove the dummynet tag, otherwise the
+		   packet will be treated improperly in ip_output. */
+		struct m_tag *dn_tag;
+		dn_tag = m_tag_find(m, PACKET_TAG_DUMMYNET, NULL);
+		if (dn_tag != NULL)
+			m_tag_delete(m, dn_tag);
+		
+		goto passin;
+	}
 
 	odst = ip->ip_dst;
 	if (pfil_run_hooks(&inet_pfil_hook, &m, m->m_pkthdr.rcvif,
