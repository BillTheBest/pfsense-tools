#!/bin/sh

#set -e
#set -x

CURRENTDIR=`pwd`

if [ $# -eq 1 ]; then
	MAKEJ_PORTS=$1
	echo ">>>> Setting MAKEJ_PORTS (-j) to ${MAKEJ_PORTS}"
fi

cd /usr/ports

# Architecture, supported ARCH values are: 
#  Tier 1: i386, AMD64, and PC98
#  Tier 2: ARM, PowerPC, ia64, Sparc64 and sun4v
#  Tier 3: MIPS and S/390
#  Tier 4: None at the moment
#  Source: http:/www.freebsd.org/doc/en/articles/committers-guide/archs.html
ARCH=""  # Default is i386

# Ensure file exists
touch /var/db/pfS_portcache

set_cache() {
	# Strip dynamic values
	if [ "$2" != "" ]; then 
		echo ">>>> Setting port cache $1 to $2"
		cat /var/db/pfS_portcache | \
			grep -v "$1" > /tmp/pfS_portcache
		echo "'$1'			$2" >> /tmp/pfS_portcache		
		mv /tmp/pfS_portcache /var/db/pfS_portcache
	fi
}

PORTSTOBUILD="grub \
	apinger \
	rrdtool \
	lzo2 \
	ftpsesame \
	atareinit \
	cpdup \
	beep \
	check_reload_status \
	choparp \
	dnsmasq \
	expiretable \
	ifstated \
	ipsec-tools-natt \
	isc-dhcp30-server \
	isc-dhcp30-relay \
	lighttpd \
	minicron \
	miniupnpd \
	mpd \
	olsrd \
	pftop \
	libevent \
	pftpx \
	fping \
	slbd \
	ssh_tunnel_shell \
	sshlockout_pf \
	stats \
	vtsh \
	openvpn \
	zip \
	links \
	dnswatch \
	verifysig \
	openntpd \
	ftp-proxy \
	php4 \
	pecl-APC \
	php4-bcmath \
	php4-bz2 \
	php4-ctype \
	php4-curl \
	php4-ldap \
	php4-mbstring \
	php4-overload \
	php4-openssl \
	php4-tokenizer \
	php4-pcntl \
	php4-pcre \
	php4-posix \
	pecl-radius \
	php4-readline \
	php4-session \
	php4-xml \
	php4-zlib \
	php4-shmop \
	php4-sysvmsg \
	php4-sysvsem \
	php4-sysvshm \
	php4-install-all \
	php-xdebug \
	wol"

if [ ! -f /usr/ports/INDEX-7.bz2 ]; then 
	echo -n ">>> Fetching index..."
	(cd /usr/ports && make fetchindex)
	echo "Done!"
fi

if [ "$ARCH" = "" ]; then
	ARCHSTRING=""
else
	echo ">>> Setting ARCH to ${ARCH}"
	ARCHSTRING="TARGET_ARCH=${ARCH}"
fi

# pfSense is english based.
rm -rf /usr/ports/chinese/links

echo -n ">>> Locating ports..."
for PORT in $PORTSTOBUILD; do
	DOESPORTEXIST=`cat /var/db/pfS_portcache | grep "'${PORT}'" | awk '{ print $2 }'`
	if [ "${DOESPORTEXIST}" = "" ]; then
		echo ">>>> Finding $PORT..."
		DOESPORTEXIST=`find /usr/ports -name $PORT -type d | grep -v pfPorts | head -n 1`
		set_cache ${PORT} ${DOESPORTEXIST}
	fi 
	if [ "${DOESPORTEXIST}x" != "x" ]; then
		echo ">>>> Executing cd $DOESPORTEXIST && make clean"
		( cd $DOESPORTEXIST && make clean )
	else 
		( cd /home/pfsense/tools/pfPorts/$PORT && make clean)
		set_cache ${PORT} ""		
	fi
done
echo "Done!"

if [ "$MAKEJ_PORTS" != "" ]; then
	echo ">>>> Using MAKEJ_PORTS: ${MAKEJ_PORTS}"
fi

for PORT in $PORTSTOBUILD; do
	DOESPORTEXIST=`cat /var/db/pfS_portcache | grep "'${PORT}'" | awk '{ print $2 }'`
	if [ "${DOESPORTEXIST}" = "" ]; then
		echo ">>>> Building $PORT..."
		DOESPORTEXIST=`find /usr/ports -name $PORT -type d | grep -v pfPorts | head -n 1`
	fi
	if [ "${DOESPORTEXIST}x" != "x" ]; then
		echo ">>>> Found port.  Copying and building..."
		if [ -f /home/pfsense/tools/pfPorts/$PORT/useports ]; then
			echo ">>>> Found /home/pfsense/tools/pfPorts/useports ... Not removing target port directory."
		else
			echo ">>>> Removing ${DOESPORTEXIST}..."
			rm -rf $DOESPORTEXIST
			mkdir -p $DOESPORTEXIST		
		fi
		rm -rf /home/pfsense/tools/pfPorts/$PORT/work 2>/dev/null 
		echo ">>>> Executing cp -R /home/pfsense/tools/pfPorts/$PORT/* $DOESPORTEXIST/"
		cp -R /home/pfsense/tools/pfPorts/$PORT/* $DOESPORTEXIST/
		cd $DOESPORTEXIST && make -DALWAYS_BUILD_DEPENDS=yo ${ARCHSTRING} $MAKEJ_PORTS -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS depends
		cd $DOESPORTEXIST && make -DALWAYS_BUILD_DEPENDS=yo ${ARCHSTRING} $MAKEJ_PORTS -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS
		cd $DOESPORTEXIST && make -DALWAYS_BUILD_DEPENDS=yo ${ARCHSTRING} -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS install
	else
		echo ">>>> Port not found, building from pfPorts..."
		cd /home/pfsense/tools/pfPorts/$PORT && make -DALWAYS_BUILD_DEPENDS=yo $MAKEJ_PORTS ${ARCHSTRING} -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS depends
		cd /home/pfsense/tools/pfPorts/$PORT && make -DALWAYS_BUILD_DEPENDS=yo $MAKEJ_PORTS ${ARCHSTRING} -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS		
		cd /home/pfsense/tools/pfPorts/$PORT && make -DALWAYS_BUILD_DEPENDS=yo ${ARCHSTRING} -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS install
	fi
done

cd $CURRENTDIR
