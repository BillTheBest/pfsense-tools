#!/bin/sh

#set -e
#set -x

# Backup pwd and chdir to ports
CURRENTDIR=`pwd`
cd /usr/ports

if [ $# -eq 1 ]; then
	MAKEJ_PORTS=$1
	echo ">>> Setting MAKEJ_PORTS (-j) to ${MAKEJ_PORTS}"
fi

# Ensure file exists
touch /var/db/pfS_portcache

echo ">>> Removing previous PHP environment..."
find /usr/local/include /usr/local/man/ /usr/local/bin /usr/local/sbin /usr/local/lib /usr/local/etc -name "*php*" -exec rm -rf {} \; 2>/dev/null
find /usr/local -name extensions.ini -exec rm {} \;
rm -rf /var/db/pkg/php*

set_cache() {
	# Strip dynamic values
	echo ">>> Setting port cache $1 to $2"
	cat /var/db/pfS_portcache | \
		grep -v "'$1'" > /tmp/pfS_portcache
	echo "'$1'			$2" >> /tmp/pfS_portcache		
	mv /tmp/pfS_portcache /var/db/pfS_portcache
}

PORTSTOBUILD="grub \
	apinger \
	rrdtool \
	lzo2 \
	ftpsesame \
	atareinit \
	cpdup \
	beep \
	check_reload_status \
	choparp \
	dnsmasq \
	expiretable \
	ifstated \
	ipsec-tools-natt \
	isc-dhcp30-server \
	isc-dhcp30-relay \
	lighttpd \
	minicron \
	miniupnpd \
	mpd \
	olsrd \
	pftop \
	libevent \
	pftpx \
	fping \
	slbd \
	ssh_tunnel_shell \
	sshlockout_pf \
	stats \
	vtsh \
	openvpn \
	zip \
	links \
	dnswatch \
	verifysig \
	openntpd \
	ftp-proxy \
	php4 \
	pecl-APC \
	php4-bcmath \
	php4-bz2 \
	php4-ctype \
	php4-curl \
	php4-ldap \
	php4-mbstring \
	php4-overload \
	php4-openssl \
	php4-tokenizer \
	php4-pcntl \
	php4-pcre \
	php4-posix \
	pecl-radius \
	php4-readline \
	php4-session \
	php4-xml \
	php4-zlib \
	php4-shmop \
	php4-sysvmsg \
	php4-sysvsem \
	php4-sysvshm \
	php4-install-all \
	php-xdebug \
	rate \
	wol"

if [ ! -f /usr/ports/INDEX-7.bz2 ]; then 
	echo -n ">>> Fetching index..."
	(cd /usr/ports && make fetchindex)
	echo "Done!"
fi

# pfSense is english based otherwise find will find 
# chinese ports first.
rm -rf /usr/ports/chinese/links

echo ">>> Locating ports (this will take a while)..."
for PORT in $PORTSTOBUILD; do
	DOESPORTEXIST=`cat /var/db/pfS_portcache | grep "'${PORT}'" | awk '{ print $2 }'`
	if [ "${DOESPORTEXIST}" = "" ]; then
		DOESPORTEXIST=`find /usr/ports -name $PORT -type d | grep -v pfPorts | grep -v work | head -n 1`
		set_cache ${PORT} ${DOESPORTEXIST}
	fi 
	if [ "${DOESPORTEXIST}" != "" ]; then
		( cd $DOESPORTEXIST && make clean ) | egrep -B3 -A3 -wi '(error)'
	else 
		( cd /home/pfsense/tools/pfPorts/$PORT && make clean) | egrep -B3 -A3 -wi '(error)'
	fi
done

clean_make_install() {
	# Architecture, supported ARCH values are: 
	#  Tier 1: i386, AMD64, and PC98
	#  Tier 2: ARM, PowerPC, ia64, Sparc64 and sun4v
	#  Tier 3: MIPS and S/390
	#  Tier 4: None at the moment
	#  Source: http:/www.freebsd.org/doc/en/articles/committers-guide/archs.html
	# Default is i386
	ARCH=""
	if [ -f pfsense_local.sh ]; then
		MAKEJ_PORTS=`cat pfsense_local.sh | grep MAKEJ_PORTS | cut -d'"' -f2`
	else 
		if [ -f ../builder_scripts/pfsense_local.sh ]; then
			MAKEJ_PORTS=`cat ../builder_scripts/pfsense_local.sh | grep MAKEJ_PORTS | cut -d'"' -f2`		
		fi
	fi

	PKGNAME=`make -C $1 -V PKGNAME`

	if [ "$2" = "check_installed" -a -d /var/db/pkg/${PKGNAME} ]; then
		echo ">>> Already built, skipping..."
	else
		ARGUMENTS="TARGET_ARCH=${ARCH} $MAKEJ_PORTS -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS"
		if ! make -C $1 $ARGUMENTS clean build install; then
			echo ">>> ERROR Building $PORT"
			kill $$
		fi
	fi
}

clean_build_install_clean() {
	PORTPATH=$1
	PORT=`basename $PORTPATH`
	echo ">>> Building dependencies of $PORT..."
	RUNLIST=`cd $PORTPATH && make build-depends-list`
	for RUN in $RUNLIST; do
		echo ">>> Build dependency $RUN"
		clean_make_install $RUN check_installed
	done
	clean_make_install $PORTPATH
}

for PORT in $PORTSTOBUILD; do
	echo ">>> Building $PORT..."
	DOESPORTEXIST=`cat /var/db/pfS_portcache | grep "'${PORT}'" | awk '{ print $2 }'`
	if [ "${DOESPORTEXIST}" = "" ]; then
		DOESPORTEXIST=`find /usr/ports -name $PORT -type d | grep -v pfPorts | grep -v work | head -n 1`
	fi
	if [ "${DOESPORTEXIST}x" != "x" ]; then
		echo "Found port.  Copying and building..."
		if [ ! -f /home/pfsense/tools/pfPorts/$PORT/useports ]; then
			rm -rf $DOESPORTEXIST
			mkdir -p $DOESPORTEXIST
		fi
		rm -rf /home/pfsense/tools/pfPorts/$PORT/work 2>/dev/null 
		cp -R /home/pfsense/tools/pfPorts/$PORT $DOESPORTEXIST/../
		PORTSUFFIX=`echo $DOESPORTEXIST | cut -d'/' -f4-5`
		if [ "$PORTSUFFIX" != "" ]; then
			clean_build_install_clean $DOESPORTEXIST $MAKEJ_PORTS
		else 
			echo ">>> Could not Locate PORTSUFFIX for $DOESPORTEXIST"
		fi
	else
		clean_build_install_clean /home/pfsense/tools/pfPorts/$PORT
	fi
done

cd $CURRENTDIR
