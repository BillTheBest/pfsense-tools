#!/bin/sh

#set -e
#set -x

# Keep track of build failures
rm -f /tmp/pfPort_build_failures
touch /tmp/pfPort_build_failures

# Keep track of items already built (dependencies)
rm -f /tmp/pfPort_alreadybuilt
touch /tmp/pfPort_alreadybuilt

# Backup pwd and chdir to ports
CURRENTDIR=`pwd`
cd /usr/ports

while getopts J:c o; do
	case "${o}" in
		J)	MAKEJ_PORTS="${OPTARG}"
			echo ">>> Setting MAKEJ_PORTS (-j) to '${MAKEJ_PORTS}'"
			;;
		c)	CHECK_INSTALLED="check_installed"
			;;
	esac
done

if [ -f ./pfsense-build.conf ]; then
	if [ `cat pfsense-build.conf | grep 'REMOVE_PHP=true' | grep -v grep | wc -l` -gt 0 ]; then
		REMOVE_PHP=true
	fi
fi

if [ "$REMOVE_PHP" = "true" ]; then
	echo ">>> Removing previous PHP environment..."
	find /usr/local/include /usr/local/man/ /usr/local/bin /usr/local/sbin /usr/local/lib /usr/local/etc -name "*php*" -exec rm -rf {} \; 2>/dev/null
	find /usr/local -name extensions.ini -exec rm {} \;
	rm -rf /var/db/pkg/php*
fi

# Port name         Path to port                            Verify install filename
PORTSTOBUILD="
ipsec-tools-devel	/usr/ports/security/ipsec-tools-devel	/usr/local/sbin/racoon
grub				/usr/ports/sysutils/grub				/usr/local/sbin/grub
apinger				/usr/ports/net/apinger					/usr/local/sbin/apinger
rrdtool				/usr/ports/databases/rrdtool			/usr/local/bin/rrdtool
ftpsesame			/usr/ports/ftp/ftpsesame				/usr/local/sbin/ftpsesame
cpdup				/usr/ports/sysutils/cpdup				/usr/local/bin/cpdup
beep				/usr/ports/audio/beep					/usr/local/bin/beep
choparp				/usr/ports/net-mgmt/choparp				/usr/local/sbin/choparp
dnsmasq				/usr/ports/dns/dnsmasq					/usr/local/sbin/dnsmasq
expiretable			/usr/ports/security/expiretable			/usr/local/sbin/expiretable
ifstated			/usr/ports/net/ifstated					/usr/local/sbin/ifstated
igmpproxy			/usr/ports/net/igmpproxy				/usr/local/sbin/igmpproxy
isc-dhcp30-server	/usr/ports/net/isc-dhcp30-server		/usr/local/sbin/dhcpd
isc-dhcp30-relay	/usr/ports/net/isc-dhcp30-relay			/usr/local/sbin/dhcrelay
lighttpd			/usr/ports/www/lighttpd					/usr/local/sbin/lighttpd
miniupnpd			/usr/ports/net/miniupnpd				/usr/local/sbin/miniupnpd
mpd4				/usr/ports/net/mpd4						/usr/local/sbin/mpd
olsrd				/usr/ports/net/olsrd					/usr/local/sbin/olsrd
pftop				/usr/ports/sysutils/pftop				/usr/local/sbin/pftop
libevent			/usr/ports/devel/libevent				/usr/local/lib/libevent.so
pftpx				/usr/ports/ftp/pftpx					/usr/local/sbin/pftpx
relayd				/usr/ports/net/relayd					/usr/local/sbin/relayd
fping				/usr/ports/net/fping					/usr/local/sbin/fping
php5				/usr/ports/lang/php5					/usr/local/bin/php
pecl-APC			/usr/ports/www/pecl-APC					/usr/local/lib/php/20060613/apc.so
php5-bcmath			/usr/ports/math/php5-bcmath				/usr/local/lib/php/20060613/bcmath.so
php5-bz2			/usr/ports/archivers/php5-bz2			/usr/local/lib/php/20060613/bz2.so
php5-ctype			/usr/ports/textproc/php5-ctype			/usr/local/lib/php/20060613/ctype.so
php5-curl			/usr/ports/ftp/php5-curl				/usr/local/lib/php/20060613/curl.so
php5-gettext		/usr/ports/devel/php5-gettext			/usr/local/lib/php/20060613/gettext.so
php5-ldap			/usr/ports/net/php5-ldap				/usr/local/lib/php/20060613/ldap.so
php5-mbstring		/usr/ports/converters/php5-mbstring		/usr/local/lib/php/20060613/mbstring.so
php5-mhash			/usr/ports/security/php5-mhash			/usr/local/lib/php/20060613/mhash.so
php5-mysql			/usr/ports/databases/php5-mysql			/usr/local/lib/php/20060613/mysql.so
php5-openssl		/usr/ports/security/php5-openssl		/usr/local/lib/php/20060613/openssl.so
php5-pcntl			/usr/ports/devel/php5-pcntl				/usr/local/lib/php/20060613/pcntl.so
php5-pcre			/usr/ports/devel/php5-pcre				/usr/local/lib/php/20060613/pcre.so
php5-posix			/usr/ports/sysutils/php5-posix			/usr/local/lib/php/20060613/posix.so
php5-pdo			/usr/ports/databases/php5-pdo			/usr/local/lib/php/20060613/pdo.so
php5-pdo_sqlite		/usr/ports/databases/php5-pdo_sqlite	/usr/local/lib/php/20060613/pdo_sqlite.so
pecl-radius			/usr/ports/net/pecl-radius				/usr/local/lib/php/20060613/pdo_sqlite.so
php5-readline		/usr/ports/devel/php5-readline			/usr/local/lib/php/20060613/readline.so
php5-session		/usr/ports/www/php5-session				/usr/local/lib/php/20060613/session.so
php5-simplexml		/usr/ports/textproc/php5-simplexml		/usr/local/lib/php/20060613/simplexml.so
php5-sockets		/usr/ports/net/php5-sockets				/usr/local/lib/php/20060613/sockets.so
php5-shmop			/usr/ports/devel/php5-shmop				/usr/local/lib/php/20060613/shmop.so
php5-sysvmsg		/usr/ports/devel/php5-sysvmsg			/usr/local/lib/php/20060613/sysvmsg.so
php5-sysvsem		/usr/ports/devel/php5-sysvsem			/usr/local/lib/php/20060613/sysvsem.so
php5-sysvshm		/usr/ports/devel/php5-sysvshm			/usr/local/lib/php/20060613/sysvshm.so
php5-sqlite			/usr/ports/databases/php5-sqlite		/usr/local/lib/php/20060613/pdo_sqlite.so
php5-tokenizer		/usr/ports/devel/php5-tokenizer			/usr/local/lib/php/20060613/tokenizer.so
php5-xml			/usr/ports/textproc/php5-xml			/usr/local/lib/php/20060613/xml.so
php5-zlib			/usr/ports/archivers/php5-zlib			/usr/local/lib/php/20060613/zlib.so
php5-xmlreader		/usr/ports/textproc/php5-xmlreader		/usr/local/lib/php/20060613/xmlreader.so
php5-xmlwriter		/usr/ports/textproc/php5-xmlwriter		/usr/local/lib/php/20060613/xmlwriter.so
php-xdebug			/usr/ports/devel/php-xdebug				/usr/local/lib/php/extensions/no-debug-non-zts-20020429/xdebug.so
php-suhosin			/usr/ports/security/php-suhosin			/usr/local/lib/php/20060613/suhosin.so
openvpn				/usr/ports/security/openvpn				/usr/local/sbin/openvpn
syslog-ng			/usr/ports/sysutils/syslog-ng			/usr/local/sbin/syslog-ng
zip					/usr/ports/archivers/zip				/usr/local/bin/zip
links				/usr/ports/www/links					/usr/local/bin/links
openntpd			/usr/ports/net/openntpd					/usr/local/sbin/ntpd
ftp-proxy			/usr/ports/ftp/ftp-proxy				/usr/local/sbin/ftp-proxy
pecl-uploadprogress	/usr/ports/devel/pecl-uploadprogress	/usr/local/lib/php/20060613/uploadprogress.so
php5-json			/usr/ports/devel/php5-json				/usr/local/lib/php/20060613/json.so
rate				/usr/ports/net-mgmt/rate				/usr/local/bin/rate
wol					/usr/ports/net/wol						/usr/local/bin/wol
php5-install-all	/usr/ports/devel/php5-install-all		/usr/local/bin/php"
	
clean_make_install() {
	# Architecture, supported ARCH values are:
	#  Tier 1: i386, AMD64, and PC98
	#  Tier 2: ARM, PowerPC, ia64, Sparc64 and sun4v
	#  Tier 3: MIPS and S/390
	#  Tier 4: None at the moment
	#  Source: http:/www.freebsd.org/doc/en/articles/committers-guide/archs.html
	# Default is i386
	ARCH=""
	if [ -f pfsense_local.sh ]; then
		MAKEJ_PORTS=`cat pfsense_local.sh | grep MAKEJ_PORTS | cut -d'"' -f2`
	elif [ -f ../builder_scripts/pfsense_local.sh ]; then
		MAKEJ_PORTS=`cat ../builder_scripts/pfsense_local.sh | grep MAKEJ_PORTS | cut -d'"' -f2`
	fi
	echo ">>> Building $PKGNAME"
	PKGNAME=`make -C $1 -V PKGNAME`
	if [ "$2" = "check_installed" -a -d /var/db/pkg/${PKGNAME} ]; then
		echo ">>> Already built, skipping..."
	else
		# Check to see if item is already built
		if [ `cat /tmp/pfPort_alreadybuilt | grep -v grep | grep "$1" | wc -l` -gt 0 ]; then 
			#echo ">>> Already built $1 on this run.  Skipping..."
		else
			ARGUMENTS="TARGET_ARCH=${ARCH} $MAKEJ_PORTS -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS"
			if ! make -C $1 $ARGUMENTS clean build install; then
				echo ">>> ERROR Building $PORT" >> /tmp/pfPort_build_failures
			fi
			echo "$1" >> /tmp/pfPort_alreadybuilt
		fi
	fi
}

clean_build_install_clean() {
	PORTPATH=$1
	PORT=`basename $PORTPATH`
	RUNLIST=`cd $PORTPATH && make build-depends-list`
	for RUN in $RUNLIST; do
		if [ `cat /tmp/pfPort_alreadybuilt | grep -v grep | grep "$RUN" | wc -l` -lt 1 ]; then
			echo ">>> Build dependency $RUN of $PORT"
			clean_make_install $RUN ${CHECK_INSTALLED}
		fi
	done	
	clean_make_install $PORTPATH
}

# Change the for seperator to use C/R instead of whitespace
oIFS=$IFS
IFS="
"
for PORT in $PORTSTOBUILD; do
	PORT_T=`echo $PORT | sed "s/		/	/g"`
	PORT_NAME=`echo $PORT_T | awk '{ print $1 }'`
	PORT_LOCATION=`echo $PORT_T | awk '{ print $2 }'`
	PORT_VERIFY_INSTALL_FILE=`echo $PORT_T | awk '{ print $3 }'`
	MIPS_DO_NOT_BUILD="grub 
	beep"
	for DONOTBUILD in $MIPS_DO_NOT_BUILD; do
		if [ "$PORT_NAME" = "$DONOTBUILD" ]; then
			if [ "$ARCH" = "mips" ]; then
				echo ">>> Skipping $PORT_NAME on MIPS platform..."
				continue;
			fi
			if [ "$ARCH" = "amd64" ]; then
				echo ">>> Skipping $PORT_NAME on AMD64 platform..."
				continue;
			fi
			if [ "$ARCH" = "powerpc" ]; then
				echo ">>> Skipping $PORT_NAME on POWERPC platform..."
				continue;
			fi
		fi
	done
	if [ -d "$PORT_LOCATION" ]; then
		echo "=== Found port location $PORT_LOCATION.  Copying pfPorts/$PORT and building..."
		if [ ! -f /home/pfsense/tools/pfPorts/$PORT/useports ]; then
			rm -rf $PORT_LOCATION
			mkdir -p $PORT_LOCATION
		fi
		rm -rf /home/pfsense/tools/pfPorts/$PORT_NAME/work 2>/dev/null
		cp -R /home/pfsense/tools/pfPorts/$PORT_NAME $PORT_LOCATION/../
		PORTSUFFIX=`echo $PORT_LOCATION | cut -d'/' -f4-5`
		if [ "$PORTSUFFIX" != "" ]; then
			# Return the seperator back to its original value
			IFS=$oIFS
			clean_build_install_clean $PORT_LOCATION $MAKEJ_PORTS
			# Change the for seperator to use C/R instead of whitespace
			oIFS=$IFS
			IFS="
"
		else
			echo ">>> Could not Locate PORTSUFFIX for $PORT_LOCATION"
		fi
	else
		echo "=== Copying $CURRENTDIR/$PORT_NAME $PORT_LOCATION"
		if [ ! -d $PORT_LOCATION ]; then
			if [ -d $CURRENTDIR/$PORT_NAME ]; then
				mkdir -p $PORT_LOCATION
				cp -R $CURRENTDIR/$PORT_NAME/* $PORT_LOCATION/
			fi
		fi
		# Return the seperator back to its original value
		IFS=$oIFS
		clean_build_install_clean $PORT_LOCATION $MAKEJ_PORTS
		# If the file is not found, log it.
		if [ -f $PORT_VERIFY_INSTALL_FILE ]; then
			echo "File not found $DONOTBUILD - $PORT_VERIFY_INSTALL_FILE" >> /tmp/pfPort_build_failures
		fi
		# Change the for seperator to use C/R instead of whitespace
		oIFS=$IFS
		IFS="
"
	fi
done
# Change the for seperator to use C/R instead of whitespace
oIFS=$IFS
IFS="
"

echo ">>> Ports with failures: `cat /tmp/pfPort_build_failures | wc -l`"
cat /tmp/pfPort_build_failures
echo

sleep 1

# Change back to original directory
cd $CURRENTDIR
