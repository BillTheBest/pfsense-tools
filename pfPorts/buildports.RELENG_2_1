#!/bin/sh

#set -e
#set -x

# Keep track of build failures
rm -f /tmp/pfPort_build_failures
touch /tmp/pfPort_build_failures

# Keep track of items already built (dependencies)
rm -f /tmp/pfPort_alreadybuilt
touch /tmp/pfPort_alreadybuilt

# Backup pwd and chdir to ports
CURRENTDIR=`pwd`
PFPORTSDIR=`dirname $0`
cd /usr/ports

# Individual logs here
mkdir -p /tmp/pfPort

while getopts P:J:c o; do
	case "${o}" in
		P)	BUILD_ONEPORT="${OPTARG}"
			echo ">>> Building a single port: '${BUILD_ONEPORT}'"
			;;
		J)	MAKEJ_PORTS="${OPTARG}"
			echo ">>> Setting MAKEJ_PORTS (-j) to '${MAKEJ_PORTS}'"
			;;
		c)	CHECK_INSTALLED="check_installed"
			;;
	esac
done

if [ -f ./pfsense-build.conf ]; then
	if [ `cat pfsense-build.conf | grep 'REMOVE_PHP=true' | grep -v grep | wc -l` -gt 0 ]; then
		REMOVE_PHP=true
	fi
fi

if [ "$REMOVE_PHP" = "true" ]; then
	echo ">>> Removing previous PHP environment..."
	find /usr/local/include /usr/local/man/ /usr/local/bin /usr/local/sbin /usr/local/lib /usr/local/etc -name "*php*" -exec rm -rf {} \; 2>/dev/null
	find /usr/local -name extensions.ini -exec rm {} \;
	rm -rf /var/db/pkg/php*
fi

# Port name					Path to port								Verify install filename
PORTSTOBUILD="
pfflowd-0.8					/usr/ports/net/pfflowd-0.8					/usr/local/sbin/pfflowd
ipsec-tools-devel			/usr/ports/security/ipsec-tools-devel		/usr/local/sbin/racoon
grub						/usr/ports/sysutils/grub					/usr/local/sbin/grub
ipfw-classifyd				/usr/ports/net/ipfw-classifyd				/usr/local/sbin/ipfw-classifyd
dhcplease					/usr/ports/sysutils/dhcplease				/usr/local/sbin/dhcpleases
filterdns					/usr/ports/net/filterdns					/usr/local/sbin/filterdns
apinger						/usr/ports/net/apinger						/usr/local/sbin/apinger
rrdtool						/usr/ports/databases/rrdtool				/usr/local/bin/rrdtool
cpdup						/usr/ports/sysutils/cpdup					/usr/local/bin/cpdup
cpustats					/usr/ports/sysutils/cpustats				/usr/local/sbin/cpustats
beep						/usr/ports/audio/beep						/usr/local/bin/beep
choparp						/usr/ports/net-mgmt/choparp					/usr/local/sbin/choparp
dnsmasq-no-isc-dhcp-parser	/usr/ports/dns/dnsmasq-no-isc-dhcp-parser	/usr/local/sbin/dnsmasq
expiretable					/usr/ports/security/expiretable				/usr/local/sbin/expiretable
ifstated					/usr/ports/net/ifstated						/usr/local/sbin/ifstated
igmpproxy					/usr/ports/net/igmpproxy					/usr/local/sbin/igmpproxy
isc-dhcp42-server			/usr/ports/net/isc-dhcp42-server			/usr/local/sbin/dhcpd
isc-dhcp42-relay			/usr/ports/net/isc-dhcp42-relay				/usr/local/sbin/dhcrelay
lighttpd					/usr/ports/www/lighttpd						/usr/local/sbin/lighttpd
miniupnpd					/usr/ports/net/miniupnpd					/usr/local/sbin/miniupnpd
mpd4						/usr/ports/net/mpd4							/usr/local/sbin/mpd4
mpd5						/usr/ports/net/mpd5							/usr/local/sbin/mpd5
olsrd						/usr/ports/net/olsrd						/usr/local/sbin/olsrd
pftop						/usr/ports/sysutils/pftop					/usr/local/sbin/pftop
libevent					/usr/ports/devel/libevent					/usr/local/lib/libevent.so
relayd						/usr/ports/net/relayd						/usr/local/sbin/relayd
fping						/usr/ports/net/fping						/usr/local/sbin/fping
minicron					/usr/ports/sysutils/minicron				/usr/local/bin/minicron
php5						/usr/ports/lang/php5						/usr/local/bin/php
pecl-APC					/usr/ports/www/pecl-APC						/usr/local/lib/php/20090626/apc.so
php5-bcmath					/usr/ports/math/php5-bcmath					/usr/local/lib/php/20090626/bcmath.so
php5-bz2					/usr/ports/archivers/php5-bz2				/usr/local/lib/php/20090626/bz2.so
php5-ctype					/usr/ports/textproc/php5-ctype				/usr/local/lib/php/20090626/ctype.so
php5-curl					/usr/ports/ftp/php5-curl					/usr/local/lib/php/20090626/curl.so
php5-gettext				/usr/ports/devel/php5-gettext				/usr/local/lib/php/20090626/gettext.so
php5-hash					/usr/ports/security/php5-hash				/usr/local/lib/php/20090626/hash.so
php5-ldap					/usr/ports/net/php5-ldap					/usr/local/lib/php/20090626/ldap.so
php5-mbstring				/usr/ports/converters/php5-mbstring			/usr/local/lib/php/20090626/mbstring.so
php5-mcrypt					/usr/ports/security/php5-mcrypt				/usr/local/lib/php/20090626/mcrypt.so
php5-mysql					/usr/ports/databases/php5-mysql				/usr/local/lib/php/20090626/mysql.so
php5-openssl				/usr/ports/security/php5-openssl			/usr/local/lib/php/20090626/openssl.so
php5-pcntl					/usr/ports/devel/php5-pcntl					/usr/local/lib/php/20090626/pcntl.so
php5-posix					/usr/ports/sysutils/php5-posix				/usr/local/lib/php/20090626/posix.so
php5-pdo					/usr/ports/databases/php5-pdo				/usr/local/lib/php/20090626/pdo.so
php5-pdo_sqlite				/usr/ports/databases/php5-pdo_sqlite		/usr/local/lib/php/20090626/pdo_sqlite.so
pecl-radius					/usr/ports/net/pecl-radius					/usr/local/lib/php/20090626/radius.so
php52-pfSense-module		/usr/ports/devel/php52-pfSense-module		/usr/local/lib/php/20090626/pfSense.so
php5-readline				/usr/ports/devel/php5-readline				/usr/local/lib/php/20090626/readline.so
php5-session				/usr/ports/www/php5-session					/usr/local/lib/php/20090626/session.so
php5-simplexml				/usr/ports/textproc/php5-simplexml			/usr/local/lib/php/20090626/simplexml.so
php5-sockets				/usr/ports/net/php5-sockets					/usr/local/lib/php/20090626/sockets.so
php5-shmop					/usr/ports/devel/php5-shmop					/usr/local/lib/php/20090626/shmop.so
php5-sysvmsg				/usr/ports/devel/php5-sysvmsg				/usr/local/lib/php/20090626/sysvmsg.so
php5-sysvsem				/usr/ports/devel/php5-sysvsem				/usr/local/lib/php/20090626/sysvsem.so
php5-sysvshm				/usr/ports/devel/php5-sysvshm				/usr/local/lib/php/20090626/sysvshm.so
php5-sqlite					/usr/ports/databases/php5-sqlite			/usr/local/lib/php/20090626/pdo_sqlite.so
php5-tokenizer				/usr/ports/devel/php5-tokenizer				/usr/local/lib/php/20090626/tokenizer.so
php5-xml					/usr/ports/textproc/php5-xml				/usr/local/lib/php/20090626/xml.so
php5-zlib					/usr/ports/archivers/php5-zlib				/usr/local/lib/php/20090626/zlib.so
php5-xmlreader				/usr/ports/textproc/php5-xmlreader			/usr/local/lib/php/20090626/xmlreader.so
php5-xmlwriter				/usr/ports/textproc/php5-xmlwriter			/usr/local/lib/php/20090626/xmlwriter.so
pecl-inclued				/usr/ports/devel/pecl-inclued				/usr/local/lib/php/20090626/inclued.so
zmq							/usr/ports/devel/zmq						/usr/local/bin/zmq_queue
php-zmq						/usr/ports/devel/php-zmq					/usr/local/lib/php/20090626/zmq.so
php-xdebug					/usr/ports/devel/php-xdebug					/usr/local/lib/php/extensions/no-debug-non-zts-20020429/xdebug.so
php5-suhosin					/usr/ports/security/php5-suhosin				/usr/local/lib/php/20090626/suhosin.so
openvpn-ipv6				/usr/ports/security/openvpn-ipv6			/usr/local/sbin/openvpn
syslog-ng					/usr/ports/sysutils/syslog-ng				/usr/local/sbin/syslog-ng
zip							/usr/ports/archivers/zip					/usr/local/bin/zip
links						/usr/ports/www/links						/usr/local/bin/links
elinks						/usr/ports/www/elinks						/usr/local/bin/elinks
openntpd					/usr/ports/net/openntpd						/usr/local/sbin/ntpd
pecl-uploadprogress			/usr/ports/devel/pecl-uploadprogress		/usr/local/lib/php/20090626/uploadprogress.so
php5-json					/usr/ports/devel/php5-json					/usr/local/lib/php/20090626/json.so
rate						/usr/ports/net-mgmt/rate					/usr/local/bin/rate
wol							/usr/ports/net/wol							/usr/local/bin/wol
dhcp6						/usr/ports/net/dhcp6						/usr/local/sbin/dhcp6c	
3gstat_um175				/usr/ports/comms/3gstat_um175				/usr/local/bin/3gstat
wrapalixresetbutton			/usr/ports/sysutils/wrapalixresetbutton		/usr/local/sbin/alixresetbtn
b43-fwcutter				/usr/ports/sysutils/b43-fwcutter			/usr/local/bin/b43-fwcutter
bwi-firmware-kmod			/usr/ports/net/bwi-firmware-kmod			/boot/modules/bwi_v3_ucode.ko
voucher						/usr/ports/sysutils/voucher					/usr/local/bin/voucher
gzsig						/usr/ports/sysutils/gzsig					/usr/local/sbin/gzsig
ssh_tunnel_shell			/usr/ports/sysutils/ssh_tunnel_shell		/usr/local/sbin/ssh_tunnel_shell
sshlockout_pf				/usr/ports/sysutils/sshlockout_pf			/usr/local/sbin/sshlockout_pf
smartmontools				/usr/ports/sysutils/smartmontools			/usr/local/sbin/smartctl
check_reload_status			/usr/ports/sysutils/check_reload_status		/usr/local/sbin/check_reload_status
ataidle						/usr/ports/sysutils/ataidle					/usr/local/sbin/ataidle
syslogd						/usr/ports/sysutils/syslogd					/usr/sbin/syslogd
clog						/usr/ports/sysutils/clog					/usr/sbin/clog
pecl-ssh2					/usr/ports/security/pecl-ssh2				/usr/local/lib/php/20090626/ssh2.so
autoconf-wrapper			/usr/ports/devel/autoconf-wrapper			/usr/local/bin/autoconf-wrapper
rsync						/usr/ports/net/rsync						/usr/local/bin/rsync
qstats						/usr/ports/sysutils/qstats			/usr/local/sbin/qstats
gogoc 						/usr/ports/net/gogoc						/usr/local/bin/gogoc
radvd						/usr/ports/net/radvd						/usr/local/sbin/radvd
unbound						/usr/ports/dns/unbound						/usr/local/sbin/unbound"

clean_make_install() {
	# Architecture, supported ARCH values are:
	#  Tier 1: i386, AMD64, and PC98
	#  Tier 2: ARM, PowerPC, ia64, Sparc64 and sun4v
	#  Tier 3: MIPS and S/390
	#  Tier 4: None at the moment
	#  Source: http:/www.freebsd.org/doc/en/articles/committers-guide/archs.html
	# Default is i386
	ARCH=""
	if [ -f pfsense_local.sh ]; then
		MAKEJ_PORTS=`cat pfsense_local.sh | grep MAKEJ_PORTS | cut -d'"' -f2`
	elif [ -f ../builder_scripts/pfsense_local.sh ]; then
		MAKEJ_PORTS=`cat ../builder_scripts/pfsense_local.sh | grep MAKEJ_PORTS | cut -d'"' -f2`
	fi
	PORTNOBASENAME=`basename $1`
	echo ">>> Building $PORTNOBASENAME"
	PKGNAME=`make -C $1 -V PKGNAME`
	if [ "$2" = "check_installed" -a -d /var/db/pkg/${PKGNAME} ]; then
		echo ">>> Already built, skipping..."
	else
		# Check to see if item is already built
		if [ `cat /tmp/pfPort_alreadybuilt | grep -v grep | grep "$1" | wc -l` -gt 0 ]; then 
			#echo ">>> Already built $1 on this run.  Skipping..."
		else
			ARGUMENTS="TARGET_ARCH=${ARCH} ${MAKEJ_PORTS} -DBATCH -DFORCE_PKG_REGISTER -DNOPORTDOCS"
			echo ">>> Building port $PORT"
			if ! script /tmp/$PORT make -C $1 $ARGUMENTS clean build install </dev/null; then
				echo ">>> ERROR Building $PORT" >> /tmp/pfPort_build_failures
			fi
			mv /tmp/$PORT /tmp/pfPort/$PORTNOBASENAME
			echo "$1" >> /tmp/pfPort_alreadybuilt
		fi
	fi
}

clean_build_install_clean() {
	PORTPATH=$1
	PORT=`basename $PORTPATH`
	RUNLIST=`cd $PORTPATH && make build-depends-list`
	for RUN in $RUNLIST; do
		RUNBASENAME=`basename $RUN`
		if [ `cat /tmp/pfPort_alreadybuilt | grep -v grep | grep "$RUN" | wc -l` -lt 1 ]; then
			echo ">>> Build dependency $RUNBASENAME of $PORT"
			clean_make_install $RUN ${CHECK_INSTALLED}
		fi
	done	
	clean_make_install $PORTPATH
}

# Change the for seperator to use C/R instead of whitespace
oIFS=$IFS
IFS="
"
for PORT in $PORTSTOBUILD; do
	PORT_T=`echo $PORT | sed "s/		/	/g"`
	PORT_NAME=`echo $PORT_T | awk '{ print $1 }'`
	if [ "$BUILD_ONEPORT" != "" ]; then
		if [ "$PORT_NAME" != "$BUILD_ONEPORT" ]; then
			continue;
		fi
	fi
	PORT_LOCATION=`echo $PORT_T | awk '{ print $2 }'`
	PORT_VERIFY_INSTALL_FILE=`echo $PORT_T | awk '{ print $3 }'`
	MIPS_DO_NOT_BUILD="grub 
	beep"
	for DONOTBUILD in $MIPS_DO_NOT_BUILD; do
		if [ "$PORT_NAME" = "$DONOTBUILD" ]; then
			if [ "$ARCH" = "mips" ]; then
				echo ">>> Skipping $PORT_NAME on MIPS platform..."
				continue;
			fi
			if [ "$ARCH" = "amd64" ]; then
				echo ">>> Skipping $PORT_NAME on AMD64 platform..."
				continue;
			fi
			if [ "$ARCH" = "powerpc" ]; then
				echo ">>> Skipping $PORT_NAME on POWERPC platform..."
				continue;
			fi
		fi
	done
	if [ -d "$PORT_LOCATION" ]; then
		echo ">>> Found port location $PORT_LOCATION."
		if [ -d ${PFPORTSDIR}/$PORT_NAME ]; then
			echo ">>> Copying pfPorts${PORT_LOCATION} and building..."
			if [ ! -f ${PFPORTSDIR}/$PORT_NAME/useports ]; then
				rm -rf $PORT_LOCATION
				mkdir -p $PORT_LOCATION
			fi
			rm -rf ${PFPORTSDIR}/$PORT_NAME/work 2>/dev/null
			cp -R ${PFPORTSDIR}/$PORT_NAME $PORT_LOCATION/../
		fi
		PORTSUFFIX=`echo $PORT_LOCATION | cut -d'/' -f4-5`
		if [ "$PORTSUFFIX" != "" ]; then
			# Return the seperator back to its original value
			IFS=$oIFS
			clean_build_install_clean $PORT_LOCATION $MAKEJ_PORTS
			# Change the for seperator to use C/R instead of whitespace
			oIFS=$IFS
			IFS="
"
		else
			echo ">>> Could not Locate PORTSUFFIX for $PORT_LOCATION"
		fi
	else
		echo ">>> Copying ${PFPORTSDIR}/$PORT_NAME $PORT_LOCATION"
		if [ ! -d $PORT_LOCATION ]; then
			echo ">>> Creating directory $PORT_LOCATION"
			mkdir -p $PORT_LOCATION
		else 
			rm -rf $PORT_LOCATION/*
		fi
		rm -rf ${PFPORTSDIR}/$PORT_NAME/work 2>/dev/null
		cp -R ${PFPORTSDIR}/$PORT_NAME/* $PORT_LOCATION/
		# Return the seperator back to its original value
		IFS=$oIFS
		clean_build_install_clean $PORT_LOCATION $MAKEJ_PORTS
		# If the file is not found, log it.
		if [ ! -f $PORT_VERIFY_INSTALL_FILE ]; then
			echo ">>> File not found $PORT - $PORT_VERIFY_INSTALL_FILE" >> /tmp/pfPort_build_failures
		fi
		# Change the for seperator to use C/R instead of whitespace
		oIFS=$IFS
		IFS="
"
	fi
done
# Change the for seperator to use C/R instead of whitespace
IFS="
"

echo ">>> Ports with failures: `cat /tmp/pfPort_build_failures | wc -l`"
cat /tmp/pfPort_build_failures
echo

sleep 1

# Change back to original directory
cd $CURRENTDIR

# Restore
IFS=$oIFS
